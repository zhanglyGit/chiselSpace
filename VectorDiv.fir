circuit VectorDiv :
  module Complex :
    input clock : Clock
    input reset : Reset
    output io : { flip instr : UInt<32>, flip vlmul : UInt<3>, flip isComplex : UInt<1>[6], vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}[6], num : UInt<3>, offset : UInt<1>[6], strIndex : UInt<3>}

    wire numOfUop : UInt<4> @[Complex.scala 18:22]
    wire vecCtrlBundle : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}[8] @[Complex.scala 19:27]
    node _T = eq(io.vlmul, UInt<1>("h1")) @[Complex.scala 21:17]
    when _T : @[Complex.scala 21:31]
      numOfUop <= UInt<2>("h2") @[Complex.scala 22:14]
    else :
      node _T_1 = eq(io.vlmul, UInt<2>("h2")) @[Complex.scala 23:23]
      when _T_1 : @[Complex.scala 23:37]
        numOfUop <= UInt<3>("h4") @[Complex.scala 24:14]
      else :
        node _T_2 = eq(io.vlmul, UInt<2>("h3")) @[Complex.scala 25:23]
        when _T_2 : @[Complex.scala 25:37]
          numOfUop <= UInt<4>("h8") @[Complex.scala 26:14]
        else :
          numOfUop <= UInt<1>("h1") @[Complex.scala 28:14]
    vecCtrlBundle[0].srcType[0] <= UInt<1>("h0") @[Complex.scala 32:33]
    vecCtrlBundle[0].srcType[1] <= UInt<1>("h0") @[Complex.scala 33:33]
    vecCtrlBundle[0].srcType[2] <= UInt<1>("h0") @[Complex.scala 34:33]
    vecCtrlBundle[0].srcType[3] <= UInt<1>("h0") @[Complex.scala 35:33]
    vecCtrlBundle[0].lsrc[0] <= UInt<1>("h0") @[Complex.scala 36:30]
    vecCtrlBundle[0].lsrc[1] <= UInt<1>("h0") @[Complex.scala 37:30]
    vecCtrlBundle[0].lsrc[2] <= UInt<1>("h0") @[Complex.scala 38:30]
    vecCtrlBundle[0].lsrc[3] <= UInt<1>("h0") @[Complex.scala 39:30]
    vecCtrlBundle[0].ldest <= UInt<1>("h0") @[Complex.scala 40:28]
    vecCtrlBundle[0].fuType <= UInt<1>("h0") @[Complex.scala 41:29]
    vecCtrlBundle[0].fuOpType <= UInt<1>("h0") @[Complex.scala 42:31]
    vecCtrlBundle[0].rfWen <= UInt<1>("h0") @[Complex.scala 43:28]
    vecCtrlBundle[0].fpWen <= UInt<1>("h0") @[Complex.scala 44:28]
    vecCtrlBundle[0].vecWen <= UInt<1>("h0") @[Complex.scala 45:29]
    vecCtrlBundle[0].mWen <= UInt<1>("h0") @[Complex.scala 46:27]
    vecCtrlBundle[0].vxsatWen <= UInt<1>("h0") @[Complex.scala 47:31]
    vecCtrlBundle[0].isXSTrap <= UInt<1>("h0") @[Complex.scala 48:31]
    vecCtrlBundle[0].noSpecExec <= UInt<1>("h0") @[Complex.scala 49:33]
    vecCtrlBundle[0].blockBackward <= UInt<1>("h0") @[Complex.scala 50:36]
    vecCtrlBundle[0].flushPipe <= UInt<1>("h0") @[Complex.scala 51:32]
    vecCtrlBundle[0].selImm <= UInt<1>("h0") @[Complex.scala 52:29]
    vecCtrlBundle[0].imm <= UInt<1>("h0") @[Complex.scala 53:26]
    vecCtrlBundle[0].commitType <= UInt<1>("h0") @[Complex.scala 54:33]
    vecCtrlBundle[0].isMove <= UInt<1>("h0") @[Complex.scala 56:29]
    vecCtrlBundle[0].singleStep <= UInt<1>("h0") @[Complex.scala 57:33]
    vecCtrlBundle[0].replayInst <= UInt<1>("h0") @[Complex.scala 58:33]
    vecCtrlBundle[1].srcType[0] <= UInt<1>("h0") @[Complex.scala 32:33]
    vecCtrlBundle[1].srcType[1] <= UInt<1>("h0") @[Complex.scala 33:33]
    vecCtrlBundle[1].srcType[2] <= UInt<1>("h0") @[Complex.scala 34:33]
    vecCtrlBundle[1].srcType[3] <= UInt<1>("h0") @[Complex.scala 35:33]
    vecCtrlBundle[1].lsrc[0] <= UInt<1>("h0") @[Complex.scala 36:30]
    vecCtrlBundle[1].lsrc[1] <= UInt<1>("h0") @[Complex.scala 37:30]
    vecCtrlBundle[1].lsrc[2] <= UInt<1>("h0") @[Complex.scala 38:30]
    vecCtrlBundle[1].lsrc[3] <= UInt<1>("h0") @[Complex.scala 39:30]
    vecCtrlBundle[1].ldest <= UInt<1>("h0") @[Complex.scala 40:28]
    vecCtrlBundle[1].fuType <= UInt<1>("h0") @[Complex.scala 41:29]
    vecCtrlBundle[1].fuOpType <= UInt<1>("h0") @[Complex.scala 42:31]
    vecCtrlBundle[1].rfWen <= UInt<1>("h0") @[Complex.scala 43:28]
    vecCtrlBundle[1].fpWen <= UInt<1>("h0") @[Complex.scala 44:28]
    vecCtrlBundle[1].vecWen <= UInt<1>("h0") @[Complex.scala 45:29]
    vecCtrlBundle[1].mWen <= UInt<1>("h0") @[Complex.scala 46:27]
    vecCtrlBundle[1].vxsatWen <= UInt<1>("h0") @[Complex.scala 47:31]
    vecCtrlBundle[1].isXSTrap <= UInt<1>("h0") @[Complex.scala 48:31]
    vecCtrlBundle[1].noSpecExec <= UInt<1>("h0") @[Complex.scala 49:33]
    vecCtrlBundle[1].blockBackward <= UInt<1>("h0") @[Complex.scala 50:36]
    vecCtrlBundle[1].flushPipe <= UInt<1>("h0") @[Complex.scala 51:32]
    vecCtrlBundle[1].selImm <= UInt<1>("h0") @[Complex.scala 52:29]
    vecCtrlBundle[1].imm <= UInt<1>("h0") @[Complex.scala 53:26]
    vecCtrlBundle[1].commitType <= UInt<1>("h0") @[Complex.scala 54:33]
    vecCtrlBundle[1].isMove <= UInt<1>("h0") @[Complex.scala 56:29]
    vecCtrlBundle[1].singleStep <= UInt<1>("h0") @[Complex.scala 57:33]
    vecCtrlBundle[1].replayInst <= UInt<1>("h0") @[Complex.scala 58:33]
    vecCtrlBundle[2].srcType[0] <= UInt<1>("h0") @[Complex.scala 32:33]
    vecCtrlBundle[2].srcType[1] <= UInt<1>("h0") @[Complex.scala 33:33]
    vecCtrlBundle[2].srcType[2] <= UInt<1>("h0") @[Complex.scala 34:33]
    vecCtrlBundle[2].srcType[3] <= UInt<1>("h0") @[Complex.scala 35:33]
    vecCtrlBundle[2].lsrc[0] <= UInt<1>("h0") @[Complex.scala 36:30]
    vecCtrlBundle[2].lsrc[1] <= UInt<1>("h0") @[Complex.scala 37:30]
    vecCtrlBundle[2].lsrc[2] <= UInt<1>("h0") @[Complex.scala 38:30]
    vecCtrlBundle[2].lsrc[3] <= UInt<1>("h0") @[Complex.scala 39:30]
    vecCtrlBundle[2].ldest <= UInt<1>("h0") @[Complex.scala 40:28]
    vecCtrlBundle[2].fuType <= UInt<1>("h0") @[Complex.scala 41:29]
    vecCtrlBundle[2].fuOpType <= UInt<1>("h0") @[Complex.scala 42:31]
    vecCtrlBundle[2].rfWen <= UInt<1>("h0") @[Complex.scala 43:28]
    vecCtrlBundle[2].fpWen <= UInt<1>("h0") @[Complex.scala 44:28]
    vecCtrlBundle[2].vecWen <= UInt<1>("h0") @[Complex.scala 45:29]
    vecCtrlBundle[2].mWen <= UInt<1>("h0") @[Complex.scala 46:27]
    vecCtrlBundle[2].vxsatWen <= UInt<1>("h0") @[Complex.scala 47:31]
    vecCtrlBundle[2].isXSTrap <= UInt<1>("h0") @[Complex.scala 48:31]
    vecCtrlBundle[2].noSpecExec <= UInt<1>("h0") @[Complex.scala 49:33]
    vecCtrlBundle[2].blockBackward <= UInt<1>("h0") @[Complex.scala 50:36]
    vecCtrlBundle[2].flushPipe <= UInt<1>("h0") @[Complex.scala 51:32]
    vecCtrlBundle[2].selImm <= UInt<1>("h0") @[Complex.scala 52:29]
    vecCtrlBundle[2].imm <= UInt<1>("h0") @[Complex.scala 53:26]
    vecCtrlBundle[2].commitType <= UInt<1>("h0") @[Complex.scala 54:33]
    vecCtrlBundle[2].isMove <= UInt<1>("h0") @[Complex.scala 56:29]
    vecCtrlBundle[2].singleStep <= UInt<1>("h0") @[Complex.scala 57:33]
    vecCtrlBundle[2].replayInst <= UInt<1>("h0") @[Complex.scala 58:33]
    vecCtrlBundle[3].srcType[0] <= UInt<1>("h0") @[Complex.scala 32:33]
    vecCtrlBundle[3].srcType[1] <= UInt<1>("h0") @[Complex.scala 33:33]
    vecCtrlBundle[3].srcType[2] <= UInt<1>("h0") @[Complex.scala 34:33]
    vecCtrlBundle[3].srcType[3] <= UInt<1>("h0") @[Complex.scala 35:33]
    vecCtrlBundle[3].lsrc[0] <= UInt<1>("h0") @[Complex.scala 36:30]
    vecCtrlBundle[3].lsrc[1] <= UInt<1>("h0") @[Complex.scala 37:30]
    vecCtrlBundle[3].lsrc[2] <= UInt<1>("h0") @[Complex.scala 38:30]
    vecCtrlBundle[3].lsrc[3] <= UInt<1>("h0") @[Complex.scala 39:30]
    vecCtrlBundle[3].ldest <= UInt<1>("h0") @[Complex.scala 40:28]
    vecCtrlBundle[3].fuType <= UInt<1>("h0") @[Complex.scala 41:29]
    vecCtrlBundle[3].fuOpType <= UInt<1>("h0") @[Complex.scala 42:31]
    vecCtrlBundle[3].rfWen <= UInt<1>("h0") @[Complex.scala 43:28]
    vecCtrlBundle[3].fpWen <= UInt<1>("h0") @[Complex.scala 44:28]
    vecCtrlBundle[3].vecWen <= UInt<1>("h0") @[Complex.scala 45:29]
    vecCtrlBundle[3].mWen <= UInt<1>("h0") @[Complex.scala 46:27]
    vecCtrlBundle[3].vxsatWen <= UInt<1>("h0") @[Complex.scala 47:31]
    vecCtrlBundle[3].isXSTrap <= UInt<1>("h0") @[Complex.scala 48:31]
    vecCtrlBundle[3].noSpecExec <= UInt<1>("h0") @[Complex.scala 49:33]
    vecCtrlBundle[3].blockBackward <= UInt<1>("h0") @[Complex.scala 50:36]
    vecCtrlBundle[3].flushPipe <= UInt<1>("h0") @[Complex.scala 51:32]
    vecCtrlBundle[3].selImm <= UInt<1>("h0") @[Complex.scala 52:29]
    vecCtrlBundle[3].imm <= UInt<1>("h0") @[Complex.scala 53:26]
    vecCtrlBundle[3].commitType <= UInt<1>("h0") @[Complex.scala 54:33]
    vecCtrlBundle[3].isMove <= UInt<1>("h0") @[Complex.scala 56:29]
    vecCtrlBundle[3].singleStep <= UInt<1>("h0") @[Complex.scala 57:33]
    vecCtrlBundle[3].replayInst <= UInt<1>("h0") @[Complex.scala 58:33]
    vecCtrlBundle[4].srcType[0] <= UInt<1>("h0") @[Complex.scala 32:33]
    vecCtrlBundle[4].srcType[1] <= UInt<1>("h0") @[Complex.scala 33:33]
    vecCtrlBundle[4].srcType[2] <= UInt<1>("h0") @[Complex.scala 34:33]
    vecCtrlBundle[4].srcType[3] <= UInt<1>("h0") @[Complex.scala 35:33]
    vecCtrlBundle[4].lsrc[0] <= UInt<1>("h0") @[Complex.scala 36:30]
    vecCtrlBundle[4].lsrc[1] <= UInt<1>("h0") @[Complex.scala 37:30]
    vecCtrlBundle[4].lsrc[2] <= UInt<1>("h0") @[Complex.scala 38:30]
    vecCtrlBundle[4].lsrc[3] <= UInt<1>("h0") @[Complex.scala 39:30]
    vecCtrlBundle[4].ldest <= UInt<1>("h0") @[Complex.scala 40:28]
    vecCtrlBundle[4].fuType <= UInt<1>("h0") @[Complex.scala 41:29]
    vecCtrlBundle[4].fuOpType <= UInt<1>("h0") @[Complex.scala 42:31]
    vecCtrlBundle[4].rfWen <= UInt<1>("h0") @[Complex.scala 43:28]
    vecCtrlBundle[4].fpWen <= UInt<1>("h0") @[Complex.scala 44:28]
    vecCtrlBundle[4].vecWen <= UInt<1>("h0") @[Complex.scala 45:29]
    vecCtrlBundle[4].mWen <= UInt<1>("h0") @[Complex.scala 46:27]
    vecCtrlBundle[4].vxsatWen <= UInt<1>("h0") @[Complex.scala 47:31]
    vecCtrlBundle[4].isXSTrap <= UInt<1>("h0") @[Complex.scala 48:31]
    vecCtrlBundle[4].noSpecExec <= UInt<1>("h0") @[Complex.scala 49:33]
    vecCtrlBundle[4].blockBackward <= UInt<1>("h0") @[Complex.scala 50:36]
    vecCtrlBundle[4].flushPipe <= UInt<1>("h0") @[Complex.scala 51:32]
    vecCtrlBundle[4].selImm <= UInt<1>("h0") @[Complex.scala 52:29]
    vecCtrlBundle[4].imm <= UInt<1>("h0") @[Complex.scala 53:26]
    vecCtrlBundle[4].commitType <= UInt<1>("h0") @[Complex.scala 54:33]
    vecCtrlBundle[4].isMove <= UInt<1>("h0") @[Complex.scala 56:29]
    vecCtrlBundle[4].singleStep <= UInt<1>("h0") @[Complex.scala 57:33]
    vecCtrlBundle[4].replayInst <= UInt<1>("h0") @[Complex.scala 58:33]
    vecCtrlBundle[5].srcType[0] <= UInt<1>("h0") @[Complex.scala 32:33]
    vecCtrlBundle[5].srcType[1] <= UInt<1>("h0") @[Complex.scala 33:33]
    vecCtrlBundle[5].srcType[2] <= UInt<1>("h0") @[Complex.scala 34:33]
    vecCtrlBundle[5].srcType[3] <= UInt<1>("h0") @[Complex.scala 35:33]
    vecCtrlBundle[5].lsrc[0] <= UInt<1>("h0") @[Complex.scala 36:30]
    vecCtrlBundle[5].lsrc[1] <= UInt<1>("h0") @[Complex.scala 37:30]
    vecCtrlBundle[5].lsrc[2] <= UInt<1>("h0") @[Complex.scala 38:30]
    vecCtrlBundle[5].lsrc[3] <= UInt<1>("h0") @[Complex.scala 39:30]
    vecCtrlBundle[5].ldest <= UInt<1>("h0") @[Complex.scala 40:28]
    vecCtrlBundle[5].fuType <= UInt<1>("h0") @[Complex.scala 41:29]
    vecCtrlBundle[5].fuOpType <= UInt<1>("h0") @[Complex.scala 42:31]
    vecCtrlBundle[5].rfWen <= UInt<1>("h0") @[Complex.scala 43:28]
    vecCtrlBundle[5].fpWen <= UInt<1>("h0") @[Complex.scala 44:28]
    vecCtrlBundle[5].vecWen <= UInt<1>("h0") @[Complex.scala 45:29]
    vecCtrlBundle[5].mWen <= UInt<1>("h0") @[Complex.scala 46:27]
    vecCtrlBundle[5].vxsatWen <= UInt<1>("h0") @[Complex.scala 47:31]
    vecCtrlBundle[5].isXSTrap <= UInt<1>("h0") @[Complex.scala 48:31]
    vecCtrlBundle[5].noSpecExec <= UInt<1>("h0") @[Complex.scala 49:33]
    vecCtrlBundle[5].blockBackward <= UInt<1>("h0") @[Complex.scala 50:36]
    vecCtrlBundle[5].flushPipe <= UInt<1>("h0") @[Complex.scala 51:32]
    vecCtrlBundle[5].selImm <= UInt<1>("h0") @[Complex.scala 52:29]
    vecCtrlBundle[5].imm <= UInt<1>("h0") @[Complex.scala 53:26]
    vecCtrlBundle[5].commitType <= UInt<1>("h0") @[Complex.scala 54:33]
    vecCtrlBundle[5].isMove <= UInt<1>("h0") @[Complex.scala 56:29]
    vecCtrlBundle[5].singleStep <= UInt<1>("h0") @[Complex.scala 57:33]
    vecCtrlBundle[5].replayInst <= UInt<1>("h0") @[Complex.scala 58:33]
    vecCtrlBundle[6].srcType[0] <= UInt<1>("h0") @[Complex.scala 32:33]
    vecCtrlBundle[6].srcType[1] <= UInt<1>("h0") @[Complex.scala 33:33]
    vecCtrlBundle[6].srcType[2] <= UInt<1>("h0") @[Complex.scala 34:33]
    vecCtrlBundle[6].srcType[3] <= UInt<1>("h0") @[Complex.scala 35:33]
    vecCtrlBundle[6].lsrc[0] <= UInt<1>("h0") @[Complex.scala 36:30]
    vecCtrlBundle[6].lsrc[1] <= UInt<1>("h0") @[Complex.scala 37:30]
    vecCtrlBundle[6].lsrc[2] <= UInt<1>("h0") @[Complex.scala 38:30]
    vecCtrlBundle[6].lsrc[3] <= UInt<1>("h0") @[Complex.scala 39:30]
    vecCtrlBundle[6].ldest <= UInt<1>("h0") @[Complex.scala 40:28]
    vecCtrlBundle[6].fuType <= UInt<1>("h0") @[Complex.scala 41:29]
    vecCtrlBundle[6].fuOpType <= UInt<1>("h0") @[Complex.scala 42:31]
    vecCtrlBundle[6].rfWen <= UInt<1>("h0") @[Complex.scala 43:28]
    vecCtrlBundle[6].fpWen <= UInt<1>("h0") @[Complex.scala 44:28]
    vecCtrlBundle[6].vecWen <= UInt<1>("h0") @[Complex.scala 45:29]
    vecCtrlBundle[6].mWen <= UInt<1>("h0") @[Complex.scala 46:27]
    vecCtrlBundle[6].vxsatWen <= UInt<1>("h0") @[Complex.scala 47:31]
    vecCtrlBundle[6].isXSTrap <= UInt<1>("h0") @[Complex.scala 48:31]
    vecCtrlBundle[6].noSpecExec <= UInt<1>("h0") @[Complex.scala 49:33]
    vecCtrlBundle[6].blockBackward <= UInt<1>("h0") @[Complex.scala 50:36]
    vecCtrlBundle[6].flushPipe <= UInt<1>("h0") @[Complex.scala 51:32]
    vecCtrlBundle[6].selImm <= UInt<1>("h0") @[Complex.scala 52:29]
    vecCtrlBundle[6].imm <= UInt<1>("h0") @[Complex.scala 53:26]
    vecCtrlBundle[6].commitType <= UInt<1>("h0") @[Complex.scala 54:33]
    vecCtrlBundle[6].isMove <= UInt<1>("h0") @[Complex.scala 56:29]
    vecCtrlBundle[6].singleStep <= UInt<1>("h0") @[Complex.scala 57:33]
    vecCtrlBundle[6].replayInst <= UInt<1>("h0") @[Complex.scala 58:33]
    vecCtrlBundle[7].srcType[0] <= UInt<1>("h0") @[Complex.scala 32:33]
    vecCtrlBundle[7].srcType[1] <= UInt<1>("h0") @[Complex.scala 33:33]
    vecCtrlBundle[7].srcType[2] <= UInt<1>("h0") @[Complex.scala 34:33]
    vecCtrlBundle[7].srcType[3] <= UInt<1>("h0") @[Complex.scala 35:33]
    vecCtrlBundle[7].lsrc[0] <= UInt<1>("h0") @[Complex.scala 36:30]
    vecCtrlBundle[7].lsrc[1] <= UInt<1>("h0") @[Complex.scala 37:30]
    vecCtrlBundle[7].lsrc[2] <= UInt<1>("h0") @[Complex.scala 38:30]
    vecCtrlBundle[7].lsrc[3] <= UInt<1>("h0") @[Complex.scala 39:30]
    vecCtrlBundle[7].ldest <= UInt<1>("h0") @[Complex.scala 40:28]
    vecCtrlBundle[7].fuType <= UInt<1>("h0") @[Complex.scala 41:29]
    vecCtrlBundle[7].fuOpType <= UInt<1>("h0") @[Complex.scala 42:31]
    vecCtrlBundle[7].rfWen <= UInt<1>("h0") @[Complex.scala 43:28]
    vecCtrlBundle[7].fpWen <= UInt<1>("h0") @[Complex.scala 44:28]
    vecCtrlBundle[7].vecWen <= UInt<1>("h0") @[Complex.scala 45:29]
    vecCtrlBundle[7].mWen <= UInt<1>("h0") @[Complex.scala 46:27]
    vecCtrlBundle[7].vxsatWen <= UInt<1>("h0") @[Complex.scala 47:31]
    vecCtrlBundle[7].isXSTrap <= UInt<1>("h0") @[Complex.scala 48:31]
    vecCtrlBundle[7].noSpecExec <= UInt<1>("h0") @[Complex.scala 49:33]
    vecCtrlBundle[7].blockBackward <= UInt<1>("h0") @[Complex.scala 50:36]
    vecCtrlBundle[7].flushPipe <= UInt<1>("h0") @[Complex.scala 51:32]
    vecCtrlBundle[7].selImm <= UInt<1>("h0") @[Complex.scala 52:29]
    vecCtrlBundle[7].imm <= UInt<1>("h0") @[Complex.scala 53:26]
    vecCtrlBundle[7].commitType <= UInt<1>("h0") @[Complex.scala 54:33]
    vecCtrlBundle[7].isMove <= UInt<1>("h0") @[Complex.scala 56:29]
    vecCtrlBundle[7].singleStep <= UInt<1>("h0") @[Complex.scala 57:33]
    vecCtrlBundle[7].replayInst <= UInt<1>("h0") @[Complex.scala 58:33]
    node _T_3 = bits(io.instr, 6, 0) @[Complex.scala 61:18]
    node _T_4 = eq(UInt<7>("h57"), _T_3) @[Complex.scala 61:26]
    when _T_4 : @[Complex.scala 61:26]
      node _T_5 = bits(io.instr, 14, 12) @[Complex.scala 63:22]
      node _T_6 = eq(UInt<1>("h0"), _T_5) @[Complex.scala 63:32]
      when _T_6 : @[Complex.scala 63:32]
        node _T_7 = bits(io.instr, 31, 26) @[Complex.scala 65:26]
        node _T_8 = eq(UInt<1>("h0"), _T_7) @[Complex.scala 65:36]
        when _T_8 : @[Complex.scala 65:36]
          vecCtrlBundle[0].srcType[0] <= UInt<3>("h4") @[Complex.scala 69:45]
          vecCtrlBundle[0].srcType[1] <= UInt<3>("h4") @[Complex.scala 70:45]
          vecCtrlBundle[0].srcType[2] <= UInt<1>("h0") @[Complex.scala 71:45]
          vecCtrlBundle[0].srcType[3] <= UInt<1>("h0") @[Complex.scala 72:45]
          node _vecCtrlBundle_0_lsrc_0_T = bits(io.instr, 19, 15) @[Complex.scala 73:53]
          node _vecCtrlBundle_0_lsrc_0_T_1 = add(_vecCtrlBundle_0_lsrc_0_T, UInt<1>("h0")) @[Complex.scala 73:62]
          node _vecCtrlBundle_0_lsrc_0_T_2 = tail(_vecCtrlBundle_0_lsrc_0_T_1, 1) @[Complex.scala 73:62]
          vecCtrlBundle[0].lsrc[0] <= _vecCtrlBundle_0_lsrc_0_T_2 @[Complex.scala 73:42]
          node _vecCtrlBundle_0_lsrc_1_T = bits(io.instr, 24, 20) @[Complex.scala 74:53]
          node _vecCtrlBundle_0_lsrc_1_T_1 = add(_vecCtrlBundle_0_lsrc_1_T, UInt<1>("h0")) @[Complex.scala 74:62]
          node _vecCtrlBundle_0_lsrc_1_T_2 = tail(_vecCtrlBundle_0_lsrc_1_T_1, 1) @[Complex.scala 74:62]
          vecCtrlBundle[0].lsrc[1] <= _vecCtrlBundle_0_lsrc_1_T_2 @[Complex.scala 74:42]
          vecCtrlBundle[0].lsrc[2] <= UInt<1>("h0") @[Complex.scala 75:42]
          vecCtrlBundle[0].lsrc[3] <= UInt<1>("h0") @[Complex.scala 76:42]
          node _vecCtrlBundle_0_ldest_T = bits(io.instr, 11, 7) @[Complex.scala 77:51]
          node _vecCtrlBundle_0_ldest_T_1 = add(_vecCtrlBundle_0_ldest_T, UInt<1>("h0")) @[Complex.scala 77:59]
          node _vecCtrlBundle_0_ldest_T_2 = tail(_vecCtrlBundle_0_ldest_T_1, 1) @[Complex.scala 77:59]
          vecCtrlBundle[0].ldest <= _vecCtrlBundle_0_ldest_T_2 @[Complex.scala 77:40]
          vecCtrlBundle[0].fuType <= UInt<5>("h18") @[Complex.scala 78:41]
          vecCtrlBundle[0].fuOpType <= UInt<7>("hf") @[Complex.scala 79:43]
          vecCtrlBundle[0].rfWen <= UInt<1>("h0") @[Complex.scala 80:40]
          vecCtrlBundle[0].fpWen <= UInt<1>("h0") @[Complex.scala 81:40]
          vecCtrlBundle[0].vecWen <= UInt<1>("h1") @[Complex.scala 82:41]
          vecCtrlBundle[0].mWen <= UInt<1>("h0") @[Complex.scala 83:39]
          vecCtrlBundle[0].vxsatWen <= UInt<1>("h0") @[Complex.scala 84:43]
          vecCtrlBundle[0].isXSTrap <= UInt<1>("h0") @[Complex.scala 85:43]
          vecCtrlBundle[0].noSpecExec <= UInt<1>("h0") @[Complex.scala 86:45]
          vecCtrlBundle[0].blockBackward <= UInt<1>("h0") @[Complex.scala 87:48]
          vecCtrlBundle[0].flushPipe <= UInt<1>("h0") @[Complex.scala 88:44]
          vecCtrlBundle[0].selImm <= UInt<1>("h0") @[Complex.scala 89:41]
          node vecCtrlBundle_0_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrlBundle_0_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrlBundle_0_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrlBundle_0_imm_minBits_1 = cat(_vecCtrlBundle_0_imm_minBits_T, _vecCtrlBundle_0_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_0_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrlBundle_0_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrlBundle_0_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrlBundle_0_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrlBundle_0_imm_minBits_lo = cat(_vecCtrlBundle_0_imm_minBits_T_4, _vecCtrlBundle_0_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrlBundle_0_imm_minBits_hi = cat(_vecCtrlBundle_0_imm_minBits_T_2, _vecCtrlBundle_0_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrlBundle_0_imm_minBits_2 = cat(vecCtrlBundle_0_imm_minBits_hi, vecCtrlBundle_0_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrlBundle_0_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrlBundle_0_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrlBundle_0_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrlBundle_0_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrlBundle_0_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrlBundle_0_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrlBundle_0_imm_minBits_lo_1 = cat(_vecCtrlBundle_0_imm_minBits_T_9, _vecCtrlBundle_0_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrlBundle_0_imm_minBits_hi_hi = cat(_vecCtrlBundle_0_imm_minBits_T_6, _vecCtrlBundle_0_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrlBundle_0_imm_minBits_hi_1 = cat(vecCtrlBundle_0_imm_minBits_hi_hi, _vecCtrlBundle_0_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrlBundle_0_imm_minBits_4 = cat(vecCtrlBundle_0_imm_minBits_hi_1, vecCtrlBundle_0_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_0_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrlBundle_0_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrlBundle_0_imm_minBits_5 = cat(_vecCtrlBundle_0_imm_minBits_T_11, _vecCtrlBundle_0_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrlBundle_0_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrlBundle_0_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrlBundle_0_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrlBundle_0_imm_T = eq(UInt<3>("h4"), vecCtrlBundle[0].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_0_imm_T_1 = eq(UInt<1>("h0"), vecCtrlBundle[0].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_0_imm_T_2 = eq(UInt<1>("h1"), vecCtrlBundle[0].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_0_imm_T_3 = eq(UInt<2>("h2"), vecCtrlBundle[0].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_0_imm_T_4 = eq(UInt<2>("h3"), vecCtrlBundle[0].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_0_imm_T_5 = eq(UInt<3>("h5"), vecCtrlBundle[0].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_0_imm_T_6 = eq(UInt<4>("h8"), vecCtrlBundle[0].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_0_imm_T_7 = eq(UInt<4>("h9"), vecCtrlBundle[0].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_0_imm_T_8 = eq(UInt<4>("ha"), vecCtrlBundle[0].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_0_imm_T_9 = mux(_vecCtrlBundle_0_imm_T, vecCtrlBundle_0_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_10 = mux(_vecCtrlBundle_0_imm_T_1, vecCtrlBundle_0_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_11 = mux(_vecCtrlBundle_0_imm_T_2, vecCtrlBundle_0_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_12 = mux(_vecCtrlBundle_0_imm_T_3, vecCtrlBundle_0_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_13 = mux(_vecCtrlBundle_0_imm_T_4, vecCtrlBundle_0_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_14 = mux(_vecCtrlBundle_0_imm_T_5, vecCtrlBundle_0_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_15 = mux(_vecCtrlBundle_0_imm_T_6, vecCtrlBundle_0_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_16 = mux(_vecCtrlBundle_0_imm_T_7, vecCtrlBundle_0_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_17 = mux(_vecCtrlBundle_0_imm_T_8, vecCtrlBundle_0_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_18 = or(_vecCtrlBundle_0_imm_T_9, _vecCtrlBundle_0_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_19 = or(_vecCtrlBundle_0_imm_T_18, _vecCtrlBundle_0_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_20 = or(_vecCtrlBundle_0_imm_T_19, _vecCtrlBundle_0_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_21 = or(_vecCtrlBundle_0_imm_T_20, _vecCtrlBundle_0_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_22 = or(_vecCtrlBundle_0_imm_T_21, _vecCtrlBundle_0_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_23 = or(_vecCtrlBundle_0_imm_T_22, _vecCtrlBundle_0_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_24 = or(_vecCtrlBundle_0_imm_T_23, _vecCtrlBundle_0_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrlBundle_0_imm_T_25 = or(_vecCtrlBundle_0_imm_T_24, _vecCtrlBundle_0_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrlBundle_0_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrlBundle_0_imm_WIRE <= _vecCtrlBundle_0_imm_T_25 @[Mux.scala 27:73]
          vecCtrlBundle[0].imm <= _vecCtrlBundle_0_imm_WIRE @[Complex.scala 90:38]
          vecCtrlBundle[0].commitType <= UInt<1>("h0") @[Complex.scala 97:45]
          vecCtrlBundle[0].isMove <= UInt<1>("h0") @[Complex.scala 99:41]
          vecCtrlBundle[0].singleStep <= UInt<1>("h0") @[Complex.scala 100:45]
          vecCtrlBundle[0].replayInst <= UInt<1>("h0") @[Complex.scala 101:45]
          vecCtrlBundle[1].srcType[0] <= UInt<3>("h4") @[Complex.scala 69:45]
          vecCtrlBundle[1].srcType[1] <= UInt<3>("h4") @[Complex.scala 70:45]
          vecCtrlBundle[1].srcType[2] <= UInt<1>("h0") @[Complex.scala 71:45]
          vecCtrlBundle[1].srcType[3] <= UInt<1>("h0") @[Complex.scala 72:45]
          node _vecCtrlBundle_1_lsrc_0_T = bits(io.instr, 19, 15) @[Complex.scala 73:53]
          node _vecCtrlBundle_1_lsrc_0_T_1 = add(_vecCtrlBundle_1_lsrc_0_T, UInt<1>("h1")) @[Complex.scala 73:62]
          node _vecCtrlBundle_1_lsrc_0_T_2 = tail(_vecCtrlBundle_1_lsrc_0_T_1, 1) @[Complex.scala 73:62]
          vecCtrlBundle[1].lsrc[0] <= _vecCtrlBundle_1_lsrc_0_T_2 @[Complex.scala 73:42]
          node _vecCtrlBundle_1_lsrc_1_T = bits(io.instr, 24, 20) @[Complex.scala 74:53]
          node _vecCtrlBundle_1_lsrc_1_T_1 = add(_vecCtrlBundle_1_lsrc_1_T, UInt<1>("h1")) @[Complex.scala 74:62]
          node _vecCtrlBundle_1_lsrc_1_T_2 = tail(_vecCtrlBundle_1_lsrc_1_T_1, 1) @[Complex.scala 74:62]
          vecCtrlBundle[1].lsrc[1] <= _vecCtrlBundle_1_lsrc_1_T_2 @[Complex.scala 74:42]
          vecCtrlBundle[1].lsrc[2] <= UInt<1>("h0") @[Complex.scala 75:42]
          vecCtrlBundle[1].lsrc[3] <= UInt<1>("h0") @[Complex.scala 76:42]
          node _vecCtrlBundle_1_ldest_T = bits(io.instr, 11, 7) @[Complex.scala 77:51]
          node _vecCtrlBundle_1_ldest_T_1 = add(_vecCtrlBundle_1_ldest_T, UInt<1>("h1")) @[Complex.scala 77:59]
          node _vecCtrlBundle_1_ldest_T_2 = tail(_vecCtrlBundle_1_ldest_T_1, 1) @[Complex.scala 77:59]
          vecCtrlBundle[1].ldest <= _vecCtrlBundle_1_ldest_T_2 @[Complex.scala 77:40]
          vecCtrlBundle[1].fuType <= UInt<5>("h18") @[Complex.scala 78:41]
          vecCtrlBundle[1].fuOpType <= UInt<7>("hf") @[Complex.scala 79:43]
          vecCtrlBundle[1].rfWen <= UInt<1>("h0") @[Complex.scala 80:40]
          vecCtrlBundle[1].fpWen <= UInt<1>("h0") @[Complex.scala 81:40]
          vecCtrlBundle[1].vecWen <= UInt<1>("h1") @[Complex.scala 82:41]
          vecCtrlBundle[1].mWen <= UInt<1>("h0") @[Complex.scala 83:39]
          vecCtrlBundle[1].vxsatWen <= UInt<1>("h0") @[Complex.scala 84:43]
          vecCtrlBundle[1].isXSTrap <= UInt<1>("h0") @[Complex.scala 85:43]
          vecCtrlBundle[1].noSpecExec <= UInt<1>("h0") @[Complex.scala 86:45]
          vecCtrlBundle[1].blockBackward <= UInt<1>("h0") @[Complex.scala 87:48]
          vecCtrlBundle[1].flushPipe <= UInt<1>("h0") @[Complex.scala 88:44]
          vecCtrlBundle[1].selImm <= UInt<1>("h0") @[Complex.scala 89:41]
          node vecCtrlBundle_1_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrlBundle_1_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrlBundle_1_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrlBundle_1_imm_minBits_1 = cat(_vecCtrlBundle_1_imm_minBits_T, _vecCtrlBundle_1_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_1_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrlBundle_1_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrlBundle_1_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrlBundle_1_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrlBundle_1_imm_minBits_lo = cat(_vecCtrlBundle_1_imm_minBits_T_4, _vecCtrlBundle_1_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrlBundle_1_imm_minBits_hi = cat(_vecCtrlBundle_1_imm_minBits_T_2, _vecCtrlBundle_1_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrlBundle_1_imm_minBits_2 = cat(vecCtrlBundle_1_imm_minBits_hi, vecCtrlBundle_1_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrlBundle_1_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrlBundle_1_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrlBundle_1_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrlBundle_1_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrlBundle_1_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrlBundle_1_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrlBundle_1_imm_minBits_lo_1 = cat(_vecCtrlBundle_1_imm_minBits_T_9, _vecCtrlBundle_1_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrlBundle_1_imm_minBits_hi_hi = cat(_vecCtrlBundle_1_imm_minBits_T_6, _vecCtrlBundle_1_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrlBundle_1_imm_minBits_hi_1 = cat(vecCtrlBundle_1_imm_minBits_hi_hi, _vecCtrlBundle_1_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrlBundle_1_imm_minBits_4 = cat(vecCtrlBundle_1_imm_minBits_hi_1, vecCtrlBundle_1_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_1_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrlBundle_1_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrlBundle_1_imm_minBits_5 = cat(_vecCtrlBundle_1_imm_minBits_T_11, _vecCtrlBundle_1_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrlBundle_1_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrlBundle_1_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrlBundle_1_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrlBundle_1_imm_T = eq(UInt<3>("h4"), vecCtrlBundle[1].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_1_imm_T_1 = eq(UInt<1>("h0"), vecCtrlBundle[1].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_1_imm_T_2 = eq(UInt<1>("h1"), vecCtrlBundle[1].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_1_imm_T_3 = eq(UInt<2>("h2"), vecCtrlBundle[1].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_1_imm_T_4 = eq(UInt<2>("h3"), vecCtrlBundle[1].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_1_imm_T_5 = eq(UInt<3>("h5"), vecCtrlBundle[1].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_1_imm_T_6 = eq(UInt<4>("h8"), vecCtrlBundle[1].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_1_imm_T_7 = eq(UInt<4>("h9"), vecCtrlBundle[1].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_1_imm_T_8 = eq(UInt<4>("ha"), vecCtrlBundle[1].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_1_imm_T_9 = mux(_vecCtrlBundle_1_imm_T, vecCtrlBundle_1_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_10 = mux(_vecCtrlBundle_1_imm_T_1, vecCtrlBundle_1_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_11 = mux(_vecCtrlBundle_1_imm_T_2, vecCtrlBundle_1_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_12 = mux(_vecCtrlBundle_1_imm_T_3, vecCtrlBundle_1_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_13 = mux(_vecCtrlBundle_1_imm_T_4, vecCtrlBundle_1_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_14 = mux(_vecCtrlBundle_1_imm_T_5, vecCtrlBundle_1_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_15 = mux(_vecCtrlBundle_1_imm_T_6, vecCtrlBundle_1_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_16 = mux(_vecCtrlBundle_1_imm_T_7, vecCtrlBundle_1_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_17 = mux(_vecCtrlBundle_1_imm_T_8, vecCtrlBundle_1_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_18 = or(_vecCtrlBundle_1_imm_T_9, _vecCtrlBundle_1_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_19 = or(_vecCtrlBundle_1_imm_T_18, _vecCtrlBundle_1_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_20 = or(_vecCtrlBundle_1_imm_T_19, _vecCtrlBundle_1_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_21 = or(_vecCtrlBundle_1_imm_T_20, _vecCtrlBundle_1_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_22 = or(_vecCtrlBundle_1_imm_T_21, _vecCtrlBundle_1_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_23 = or(_vecCtrlBundle_1_imm_T_22, _vecCtrlBundle_1_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_24 = or(_vecCtrlBundle_1_imm_T_23, _vecCtrlBundle_1_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrlBundle_1_imm_T_25 = or(_vecCtrlBundle_1_imm_T_24, _vecCtrlBundle_1_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrlBundle_1_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrlBundle_1_imm_WIRE <= _vecCtrlBundle_1_imm_T_25 @[Mux.scala 27:73]
          vecCtrlBundle[1].imm <= _vecCtrlBundle_1_imm_WIRE @[Complex.scala 90:38]
          vecCtrlBundle[1].commitType <= UInt<1>("h0") @[Complex.scala 97:45]
          vecCtrlBundle[1].isMove <= UInt<1>("h0") @[Complex.scala 99:41]
          vecCtrlBundle[1].singleStep <= UInt<1>("h0") @[Complex.scala 100:45]
          vecCtrlBundle[1].replayInst <= UInt<1>("h0") @[Complex.scala 101:45]
          vecCtrlBundle[2].srcType[0] <= UInt<3>("h4") @[Complex.scala 69:45]
          vecCtrlBundle[2].srcType[1] <= UInt<3>("h4") @[Complex.scala 70:45]
          vecCtrlBundle[2].srcType[2] <= UInt<1>("h0") @[Complex.scala 71:45]
          vecCtrlBundle[2].srcType[3] <= UInt<1>("h0") @[Complex.scala 72:45]
          node _vecCtrlBundle_2_lsrc_0_T = bits(io.instr, 19, 15) @[Complex.scala 73:53]
          node _vecCtrlBundle_2_lsrc_0_T_1 = add(_vecCtrlBundle_2_lsrc_0_T, UInt<2>("h2")) @[Complex.scala 73:62]
          node _vecCtrlBundle_2_lsrc_0_T_2 = tail(_vecCtrlBundle_2_lsrc_0_T_1, 1) @[Complex.scala 73:62]
          vecCtrlBundle[2].lsrc[0] <= _vecCtrlBundle_2_lsrc_0_T_2 @[Complex.scala 73:42]
          node _vecCtrlBundle_2_lsrc_1_T = bits(io.instr, 24, 20) @[Complex.scala 74:53]
          node _vecCtrlBundle_2_lsrc_1_T_1 = add(_vecCtrlBundle_2_lsrc_1_T, UInt<2>("h2")) @[Complex.scala 74:62]
          node _vecCtrlBundle_2_lsrc_1_T_2 = tail(_vecCtrlBundle_2_lsrc_1_T_1, 1) @[Complex.scala 74:62]
          vecCtrlBundle[2].lsrc[1] <= _vecCtrlBundle_2_lsrc_1_T_2 @[Complex.scala 74:42]
          vecCtrlBundle[2].lsrc[2] <= UInt<1>("h0") @[Complex.scala 75:42]
          vecCtrlBundle[2].lsrc[3] <= UInt<1>("h0") @[Complex.scala 76:42]
          node _vecCtrlBundle_2_ldest_T = bits(io.instr, 11, 7) @[Complex.scala 77:51]
          node _vecCtrlBundle_2_ldest_T_1 = add(_vecCtrlBundle_2_ldest_T, UInt<2>("h2")) @[Complex.scala 77:59]
          node _vecCtrlBundle_2_ldest_T_2 = tail(_vecCtrlBundle_2_ldest_T_1, 1) @[Complex.scala 77:59]
          vecCtrlBundle[2].ldest <= _vecCtrlBundle_2_ldest_T_2 @[Complex.scala 77:40]
          vecCtrlBundle[2].fuType <= UInt<5>("h18") @[Complex.scala 78:41]
          vecCtrlBundle[2].fuOpType <= UInt<7>("hf") @[Complex.scala 79:43]
          vecCtrlBundle[2].rfWen <= UInt<1>("h0") @[Complex.scala 80:40]
          vecCtrlBundle[2].fpWen <= UInt<1>("h0") @[Complex.scala 81:40]
          vecCtrlBundle[2].vecWen <= UInt<1>("h1") @[Complex.scala 82:41]
          vecCtrlBundle[2].mWen <= UInt<1>("h0") @[Complex.scala 83:39]
          vecCtrlBundle[2].vxsatWen <= UInt<1>("h0") @[Complex.scala 84:43]
          vecCtrlBundle[2].isXSTrap <= UInt<1>("h0") @[Complex.scala 85:43]
          vecCtrlBundle[2].noSpecExec <= UInt<1>("h0") @[Complex.scala 86:45]
          vecCtrlBundle[2].blockBackward <= UInt<1>("h0") @[Complex.scala 87:48]
          vecCtrlBundle[2].flushPipe <= UInt<1>("h0") @[Complex.scala 88:44]
          vecCtrlBundle[2].selImm <= UInt<1>("h0") @[Complex.scala 89:41]
          node vecCtrlBundle_2_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrlBundle_2_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrlBundle_2_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrlBundle_2_imm_minBits_1 = cat(_vecCtrlBundle_2_imm_minBits_T, _vecCtrlBundle_2_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_2_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrlBundle_2_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrlBundle_2_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrlBundle_2_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrlBundle_2_imm_minBits_lo = cat(_vecCtrlBundle_2_imm_minBits_T_4, _vecCtrlBundle_2_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrlBundle_2_imm_minBits_hi = cat(_vecCtrlBundle_2_imm_minBits_T_2, _vecCtrlBundle_2_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrlBundle_2_imm_minBits_2 = cat(vecCtrlBundle_2_imm_minBits_hi, vecCtrlBundle_2_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrlBundle_2_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrlBundle_2_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrlBundle_2_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrlBundle_2_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrlBundle_2_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrlBundle_2_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrlBundle_2_imm_minBits_lo_1 = cat(_vecCtrlBundle_2_imm_minBits_T_9, _vecCtrlBundle_2_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrlBundle_2_imm_minBits_hi_hi = cat(_vecCtrlBundle_2_imm_minBits_T_6, _vecCtrlBundle_2_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrlBundle_2_imm_minBits_hi_1 = cat(vecCtrlBundle_2_imm_minBits_hi_hi, _vecCtrlBundle_2_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrlBundle_2_imm_minBits_4 = cat(vecCtrlBundle_2_imm_minBits_hi_1, vecCtrlBundle_2_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_2_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrlBundle_2_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrlBundle_2_imm_minBits_5 = cat(_vecCtrlBundle_2_imm_minBits_T_11, _vecCtrlBundle_2_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrlBundle_2_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrlBundle_2_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrlBundle_2_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrlBundle_2_imm_T = eq(UInt<3>("h4"), vecCtrlBundle[2].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_2_imm_T_1 = eq(UInt<1>("h0"), vecCtrlBundle[2].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_2_imm_T_2 = eq(UInt<1>("h1"), vecCtrlBundle[2].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_2_imm_T_3 = eq(UInt<2>("h2"), vecCtrlBundle[2].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_2_imm_T_4 = eq(UInt<2>("h3"), vecCtrlBundle[2].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_2_imm_T_5 = eq(UInt<3>("h5"), vecCtrlBundle[2].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_2_imm_T_6 = eq(UInt<4>("h8"), vecCtrlBundle[2].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_2_imm_T_7 = eq(UInt<4>("h9"), vecCtrlBundle[2].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_2_imm_T_8 = eq(UInt<4>("ha"), vecCtrlBundle[2].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_2_imm_T_9 = mux(_vecCtrlBundle_2_imm_T, vecCtrlBundle_2_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_10 = mux(_vecCtrlBundle_2_imm_T_1, vecCtrlBundle_2_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_11 = mux(_vecCtrlBundle_2_imm_T_2, vecCtrlBundle_2_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_12 = mux(_vecCtrlBundle_2_imm_T_3, vecCtrlBundle_2_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_13 = mux(_vecCtrlBundle_2_imm_T_4, vecCtrlBundle_2_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_14 = mux(_vecCtrlBundle_2_imm_T_5, vecCtrlBundle_2_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_15 = mux(_vecCtrlBundle_2_imm_T_6, vecCtrlBundle_2_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_16 = mux(_vecCtrlBundle_2_imm_T_7, vecCtrlBundle_2_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_17 = mux(_vecCtrlBundle_2_imm_T_8, vecCtrlBundle_2_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_18 = or(_vecCtrlBundle_2_imm_T_9, _vecCtrlBundle_2_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_19 = or(_vecCtrlBundle_2_imm_T_18, _vecCtrlBundle_2_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_20 = or(_vecCtrlBundle_2_imm_T_19, _vecCtrlBundle_2_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_21 = or(_vecCtrlBundle_2_imm_T_20, _vecCtrlBundle_2_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_22 = or(_vecCtrlBundle_2_imm_T_21, _vecCtrlBundle_2_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_23 = or(_vecCtrlBundle_2_imm_T_22, _vecCtrlBundle_2_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_24 = or(_vecCtrlBundle_2_imm_T_23, _vecCtrlBundle_2_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrlBundle_2_imm_T_25 = or(_vecCtrlBundle_2_imm_T_24, _vecCtrlBundle_2_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrlBundle_2_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrlBundle_2_imm_WIRE <= _vecCtrlBundle_2_imm_T_25 @[Mux.scala 27:73]
          vecCtrlBundle[2].imm <= _vecCtrlBundle_2_imm_WIRE @[Complex.scala 90:38]
          vecCtrlBundle[2].commitType <= UInt<1>("h0") @[Complex.scala 97:45]
          vecCtrlBundle[2].isMove <= UInt<1>("h0") @[Complex.scala 99:41]
          vecCtrlBundle[2].singleStep <= UInt<1>("h0") @[Complex.scala 100:45]
          vecCtrlBundle[2].replayInst <= UInt<1>("h0") @[Complex.scala 101:45]
          vecCtrlBundle[3].srcType[0] <= UInt<3>("h4") @[Complex.scala 69:45]
          vecCtrlBundle[3].srcType[1] <= UInt<3>("h4") @[Complex.scala 70:45]
          vecCtrlBundle[3].srcType[2] <= UInt<1>("h0") @[Complex.scala 71:45]
          vecCtrlBundle[3].srcType[3] <= UInt<1>("h0") @[Complex.scala 72:45]
          node _vecCtrlBundle_3_lsrc_0_T = bits(io.instr, 19, 15) @[Complex.scala 73:53]
          node _vecCtrlBundle_3_lsrc_0_T_1 = add(_vecCtrlBundle_3_lsrc_0_T, UInt<2>("h3")) @[Complex.scala 73:62]
          node _vecCtrlBundle_3_lsrc_0_T_2 = tail(_vecCtrlBundle_3_lsrc_0_T_1, 1) @[Complex.scala 73:62]
          vecCtrlBundle[3].lsrc[0] <= _vecCtrlBundle_3_lsrc_0_T_2 @[Complex.scala 73:42]
          node _vecCtrlBundle_3_lsrc_1_T = bits(io.instr, 24, 20) @[Complex.scala 74:53]
          node _vecCtrlBundle_3_lsrc_1_T_1 = add(_vecCtrlBundle_3_lsrc_1_T, UInt<2>("h3")) @[Complex.scala 74:62]
          node _vecCtrlBundle_3_lsrc_1_T_2 = tail(_vecCtrlBundle_3_lsrc_1_T_1, 1) @[Complex.scala 74:62]
          vecCtrlBundle[3].lsrc[1] <= _vecCtrlBundle_3_lsrc_1_T_2 @[Complex.scala 74:42]
          vecCtrlBundle[3].lsrc[2] <= UInt<1>("h0") @[Complex.scala 75:42]
          vecCtrlBundle[3].lsrc[3] <= UInt<1>("h0") @[Complex.scala 76:42]
          node _vecCtrlBundle_3_ldest_T = bits(io.instr, 11, 7) @[Complex.scala 77:51]
          node _vecCtrlBundle_3_ldest_T_1 = add(_vecCtrlBundle_3_ldest_T, UInt<2>("h3")) @[Complex.scala 77:59]
          node _vecCtrlBundle_3_ldest_T_2 = tail(_vecCtrlBundle_3_ldest_T_1, 1) @[Complex.scala 77:59]
          vecCtrlBundle[3].ldest <= _vecCtrlBundle_3_ldest_T_2 @[Complex.scala 77:40]
          vecCtrlBundle[3].fuType <= UInt<5>("h18") @[Complex.scala 78:41]
          vecCtrlBundle[3].fuOpType <= UInt<7>("hf") @[Complex.scala 79:43]
          vecCtrlBundle[3].rfWen <= UInt<1>("h0") @[Complex.scala 80:40]
          vecCtrlBundle[3].fpWen <= UInt<1>("h0") @[Complex.scala 81:40]
          vecCtrlBundle[3].vecWen <= UInt<1>("h1") @[Complex.scala 82:41]
          vecCtrlBundle[3].mWen <= UInt<1>("h0") @[Complex.scala 83:39]
          vecCtrlBundle[3].vxsatWen <= UInt<1>("h0") @[Complex.scala 84:43]
          vecCtrlBundle[3].isXSTrap <= UInt<1>("h0") @[Complex.scala 85:43]
          vecCtrlBundle[3].noSpecExec <= UInt<1>("h0") @[Complex.scala 86:45]
          vecCtrlBundle[3].blockBackward <= UInt<1>("h0") @[Complex.scala 87:48]
          vecCtrlBundle[3].flushPipe <= UInt<1>("h0") @[Complex.scala 88:44]
          vecCtrlBundle[3].selImm <= UInt<1>("h0") @[Complex.scala 89:41]
          node vecCtrlBundle_3_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrlBundle_3_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrlBundle_3_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrlBundle_3_imm_minBits_1 = cat(_vecCtrlBundle_3_imm_minBits_T, _vecCtrlBundle_3_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_3_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrlBundle_3_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrlBundle_3_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrlBundle_3_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrlBundle_3_imm_minBits_lo = cat(_vecCtrlBundle_3_imm_minBits_T_4, _vecCtrlBundle_3_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrlBundle_3_imm_minBits_hi = cat(_vecCtrlBundle_3_imm_minBits_T_2, _vecCtrlBundle_3_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrlBundle_3_imm_minBits_2 = cat(vecCtrlBundle_3_imm_minBits_hi, vecCtrlBundle_3_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrlBundle_3_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrlBundle_3_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrlBundle_3_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrlBundle_3_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrlBundle_3_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrlBundle_3_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrlBundle_3_imm_minBits_lo_1 = cat(_vecCtrlBundle_3_imm_minBits_T_9, _vecCtrlBundle_3_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrlBundle_3_imm_minBits_hi_hi = cat(_vecCtrlBundle_3_imm_minBits_T_6, _vecCtrlBundle_3_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrlBundle_3_imm_minBits_hi_1 = cat(vecCtrlBundle_3_imm_minBits_hi_hi, _vecCtrlBundle_3_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrlBundle_3_imm_minBits_4 = cat(vecCtrlBundle_3_imm_minBits_hi_1, vecCtrlBundle_3_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_3_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrlBundle_3_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrlBundle_3_imm_minBits_5 = cat(_vecCtrlBundle_3_imm_minBits_T_11, _vecCtrlBundle_3_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrlBundle_3_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrlBundle_3_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrlBundle_3_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrlBundle_3_imm_T = eq(UInt<3>("h4"), vecCtrlBundle[3].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_3_imm_T_1 = eq(UInt<1>("h0"), vecCtrlBundle[3].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_3_imm_T_2 = eq(UInt<1>("h1"), vecCtrlBundle[3].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_3_imm_T_3 = eq(UInt<2>("h2"), vecCtrlBundle[3].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_3_imm_T_4 = eq(UInt<2>("h3"), vecCtrlBundle[3].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_3_imm_T_5 = eq(UInt<3>("h5"), vecCtrlBundle[3].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_3_imm_T_6 = eq(UInt<4>("h8"), vecCtrlBundle[3].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_3_imm_T_7 = eq(UInt<4>("h9"), vecCtrlBundle[3].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_3_imm_T_8 = eq(UInt<4>("ha"), vecCtrlBundle[3].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_3_imm_T_9 = mux(_vecCtrlBundle_3_imm_T, vecCtrlBundle_3_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_10 = mux(_vecCtrlBundle_3_imm_T_1, vecCtrlBundle_3_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_11 = mux(_vecCtrlBundle_3_imm_T_2, vecCtrlBundle_3_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_12 = mux(_vecCtrlBundle_3_imm_T_3, vecCtrlBundle_3_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_13 = mux(_vecCtrlBundle_3_imm_T_4, vecCtrlBundle_3_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_14 = mux(_vecCtrlBundle_3_imm_T_5, vecCtrlBundle_3_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_15 = mux(_vecCtrlBundle_3_imm_T_6, vecCtrlBundle_3_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_16 = mux(_vecCtrlBundle_3_imm_T_7, vecCtrlBundle_3_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_17 = mux(_vecCtrlBundle_3_imm_T_8, vecCtrlBundle_3_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_18 = or(_vecCtrlBundle_3_imm_T_9, _vecCtrlBundle_3_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_19 = or(_vecCtrlBundle_3_imm_T_18, _vecCtrlBundle_3_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_20 = or(_vecCtrlBundle_3_imm_T_19, _vecCtrlBundle_3_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_21 = or(_vecCtrlBundle_3_imm_T_20, _vecCtrlBundle_3_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_22 = or(_vecCtrlBundle_3_imm_T_21, _vecCtrlBundle_3_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_23 = or(_vecCtrlBundle_3_imm_T_22, _vecCtrlBundle_3_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_24 = or(_vecCtrlBundle_3_imm_T_23, _vecCtrlBundle_3_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrlBundle_3_imm_T_25 = or(_vecCtrlBundle_3_imm_T_24, _vecCtrlBundle_3_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrlBundle_3_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrlBundle_3_imm_WIRE <= _vecCtrlBundle_3_imm_T_25 @[Mux.scala 27:73]
          vecCtrlBundle[3].imm <= _vecCtrlBundle_3_imm_WIRE @[Complex.scala 90:38]
          vecCtrlBundle[3].commitType <= UInt<1>("h0") @[Complex.scala 97:45]
          vecCtrlBundle[3].isMove <= UInt<1>("h0") @[Complex.scala 99:41]
          vecCtrlBundle[3].singleStep <= UInt<1>("h0") @[Complex.scala 100:45]
          vecCtrlBundle[3].replayInst <= UInt<1>("h0") @[Complex.scala 101:45]
          vecCtrlBundle[4].srcType[0] <= UInt<3>("h4") @[Complex.scala 69:45]
          vecCtrlBundle[4].srcType[1] <= UInt<3>("h4") @[Complex.scala 70:45]
          vecCtrlBundle[4].srcType[2] <= UInt<1>("h0") @[Complex.scala 71:45]
          vecCtrlBundle[4].srcType[3] <= UInt<1>("h0") @[Complex.scala 72:45]
          node _vecCtrlBundle_4_lsrc_0_T = bits(io.instr, 19, 15) @[Complex.scala 73:53]
          node _vecCtrlBundle_4_lsrc_0_T_1 = add(_vecCtrlBundle_4_lsrc_0_T, UInt<3>("h4")) @[Complex.scala 73:62]
          node _vecCtrlBundle_4_lsrc_0_T_2 = tail(_vecCtrlBundle_4_lsrc_0_T_1, 1) @[Complex.scala 73:62]
          vecCtrlBundle[4].lsrc[0] <= _vecCtrlBundle_4_lsrc_0_T_2 @[Complex.scala 73:42]
          node _vecCtrlBundle_4_lsrc_1_T = bits(io.instr, 24, 20) @[Complex.scala 74:53]
          node _vecCtrlBundle_4_lsrc_1_T_1 = add(_vecCtrlBundle_4_lsrc_1_T, UInt<3>("h4")) @[Complex.scala 74:62]
          node _vecCtrlBundle_4_lsrc_1_T_2 = tail(_vecCtrlBundle_4_lsrc_1_T_1, 1) @[Complex.scala 74:62]
          vecCtrlBundle[4].lsrc[1] <= _vecCtrlBundle_4_lsrc_1_T_2 @[Complex.scala 74:42]
          vecCtrlBundle[4].lsrc[2] <= UInt<1>("h0") @[Complex.scala 75:42]
          vecCtrlBundle[4].lsrc[3] <= UInt<1>("h0") @[Complex.scala 76:42]
          node _vecCtrlBundle_4_ldest_T = bits(io.instr, 11, 7) @[Complex.scala 77:51]
          node _vecCtrlBundle_4_ldest_T_1 = add(_vecCtrlBundle_4_ldest_T, UInt<3>("h4")) @[Complex.scala 77:59]
          node _vecCtrlBundle_4_ldest_T_2 = tail(_vecCtrlBundle_4_ldest_T_1, 1) @[Complex.scala 77:59]
          vecCtrlBundle[4].ldest <= _vecCtrlBundle_4_ldest_T_2 @[Complex.scala 77:40]
          vecCtrlBundle[4].fuType <= UInt<5>("h18") @[Complex.scala 78:41]
          vecCtrlBundle[4].fuOpType <= UInt<7>("hf") @[Complex.scala 79:43]
          vecCtrlBundle[4].rfWen <= UInt<1>("h0") @[Complex.scala 80:40]
          vecCtrlBundle[4].fpWen <= UInt<1>("h0") @[Complex.scala 81:40]
          vecCtrlBundle[4].vecWen <= UInt<1>("h1") @[Complex.scala 82:41]
          vecCtrlBundle[4].mWen <= UInt<1>("h0") @[Complex.scala 83:39]
          vecCtrlBundle[4].vxsatWen <= UInt<1>("h0") @[Complex.scala 84:43]
          vecCtrlBundle[4].isXSTrap <= UInt<1>("h0") @[Complex.scala 85:43]
          vecCtrlBundle[4].noSpecExec <= UInt<1>("h0") @[Complex.scala 86:45]
          vecCtrlBundle[4].blockBackward <= UInt<1>("h0") @[Complex.scala 87:48]
          vecCtrlBundle[4].flushPipe <= UInt<1>("h0") @[Complex.scala 88:44]
          vecCtrlBundle[4].selImm <= UInt<1>("h0") @[Complex.scala 89:41]
          node vecCtrlBundle_4_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrlBundle_4_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrlBundle_4_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrlBundle_4_imm_minBits_1 = cat(_vecCtrlBundle_4_imm_minBits_T, _vecCtrlBundle_4_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_4_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrlBundle_4_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrlBundle_4_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrlBundle_4_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrlBundle_4_imm_minBits_lo = cat(_vecCtrlBundle_4_imm_minBits_T_4, _vecCtrlBundle_4_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrlBundle_4_imm_minBits_hi = cat(_vecCtrlBundle_4_imm_minBits_T_2, _vecCtrlBundle_4_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrlBundle_4_imm_minBits_2 = cat(vecCtrlBundle_4_imm_minBits_hi, vecCtrlBundle_4_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrlBundle_4_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrlBundle_4_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrlBundle_4_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrlBundle_4_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrlBundle_4_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrlBundle_4_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrlBundle_4_imm_minBits_lo_1 = cat(_vecCtrlBundle_4_imm_minBits_T_9, _vecCtrlBundle_4_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrlBundle_4_imm_minBits_hi_hi = cat(_vecCtrlBundle_4_imm_minBits_T_6, _vecCtrlBundle_4_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrlBundle_4_imm_minBits_hi_1 = cat(vecCtrlBundle_4_imm_minBits_hi_hi, _vecCtrlBundle_4_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrlBundle_4_imm_minBits_4 = cat(vecCtrlBundle_4_imm_minBits_hi_1, vecCtrlBundle_4_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_4_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrlBundle_4_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrlBundle_4_imm_minBits_5 = cat(_vecCtrlBundle_4_imm_minBits_T_11, _vecCtrlBundle_4_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrlBundle_4_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrlBundle_4_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrlBundle_4_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrlBundle_4_imm_T = eq(UInt<3>("h4"), vecCtrlBundle[4].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_4_imm_T_1 = eq(UInt<1>("h0"), vecCtrlBundle[4].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_4_imm_T_2 = eq(UInt<1>("h1"), vecCtrlBundle[4].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_4_imm_T_3 = eq(UInt<2>("h2"), vecCtrlBundle[4].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_4_imm_T_4 = eq(UInt<2>("h3"), vecCtrlBundle[4].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_4_imm_T_5 = eq(UInt<3>("h5"), vecCtrlBundle[4].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_4_imm_T_6 = eq(UInt<4>("h8"), vecCtrlBundle[4].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_4_imm_T_7 = eq(UInt<4>("h9"), vecCtrlBundle[4].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_4_imm_T_8 = eq(UInt<4>("ha"), vecCtrlBundle[4].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_4_imm_T_9 = mux(_vecCtrlBundle_4_imm_T, vecCtrlBundle_4_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_10 = mux(_vecCtrlBundle_4_imm_T_1, vecCtrlBundle_4_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_11 = mux(_vecCtrlBundle_4_imm_T_2, vecCtrlBundle_4_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_12 = mux(_vecCtrlBundle_4_imm_T_3, vecCtrlBundle_4_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_13 = mux(_vecCtrlBundle_4_imm_T_4, vecCtrlBundle_4_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_14 = mux(_vecCtrlBundle_4_imm_T_5, vecCtrlBundle_4_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_15 = mux(_vecCtrlBundle_4_imm_T_6, vecCtrlBundle_4_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_16 = mux(_vecCtrlBundle_4_imm_T_7, vecCtrlBundle_4_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_17 = mux(_vecCtrlBundle_4_imm_T_8, vecCtrlBundle_4_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_18 = or(_vecCtrlBundle_4_imm_T_9, _vecCtrlBundle_4_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_19 = or(_vecCtrlBundle_4_imm_T_18, _vecCtrlBundle_4_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_20 = or(_vecCtrlBundle_4_imm_T_19, _vecCtrlBundle_4_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_21 = or(_vecCtrlBundle_4_imm_T_20, _vecCtrlBundle_4_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_22 = or(_vecCtrlBundle_4_imm_T_21, _vecCtrlBundle_4_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_23 = or(_vecCtrlBundle_4_imm_T_22, _vecCtrlBundle_4_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_24 = or(_vecCtrlBundle_4_imm_T_23, _vecCtrlBundle_4_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrlBundle_4_imm_T_25 = or(_vecCtrlBundle_4_imm_T_24, _vecCtrlBundle_4_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrlBundle_4_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrlBundle_4_imm_WIRE <= _vecCtrlBundle_4_imm_T_25 @[Mux.scala 27:73]
          vecCtrlBundle[4].imm <= _vecCtrlBundle_4_imm_WIRE @[Complex.scala 90:38]
          vecCtrlBundle[4].commitType <= UInt<1>("h0") @[Complex.scala 97:45]
          vecCtrlBundle[4].isMove <= UInt<1>("h0") @[Complex.scala 99:41]
          vecCtrlBundle[4].singleStep <= UInt<1>("h0") @[Complex.scala 100:45]
          vecCtrlBundle[4].replayInst <= UInt<1>("h0") @[Complex.scala 101:45]
          vecCtrlBundle[5].srcType[0] <= UInt<3>("h4") @[Complex.scala 69:45]
          vecCtrlBundle[5].srcType[1] <= UInt<3>("h4") @[Complex.scala 70:45]
          vecCtrlBundle[5].srcType[2] <= UInt<1>("h0") @[Complex.scala 71:45]
          vecCtrlBundle[5].srcType[3] <= UInt<1>("h0") @[Complex.scala 72:45]
          node _vecCtrlBundle_5_lsrc_0_T = bits(io.instr, 19, 15) @[Complex.scala 73:53]
          node _vecCtrlBundle_5_lsrc_0_T_1 = add(_vecCtrlBundle_5_lsrc_0_T, UInt<3>("h5")) @[Complex.scala 73:62]
          node _vecCtrlBundle_5_lsrc_0_T_2 = tail(_vecCtrlBundle_5_lsrc_0_T_1, 1) @[Complex.scala 73:62]
          vecCtrlBundle[5].lsrc[0] <= _vecCtrlBundle_5_lsrc_0_T_2 @[Complex.scala 73:42]
          node _vecCtrlBundle_5_lsrc_1_T = bits(io.instr, 24, 20) @[Complex.scala 74:53]
          node _vecCtrlBundle_5_lsrc_1_T_1 = add(_vecCtrlBundle_5_lsrc_1_T, UInt<3>("h5")) @[Complex.scala 74:62]
          node _vecCtrlBundle_5_lsrc_1_T_2 = tail(_vecCtrlBundle_5_lsrc_1_T_1, 1) @[Complex.scala 74:62]
          vecCtrlBundle[5].lsrc[1] <= _vecCtrlBundle_5_lsrc_1_T_2 @[Complex.scala 74:42]
          vecCtrlBundle[5].lsrc[2] <= UInt<1>("h0") @[Complex.scala 75:42]
          vecCtrlBundle[5].lsrc[3] <= UInt<1>("h0") @[Complex.scala 76:42]
          node _vecCtrlBundle_5_ldest_T = bits(io.instr, 11, 7) @[Complex.scala 77:51]
          node _vecCtrlBundle_5_ldest_T_1 = add(_vecCtrlBundle_5_ldest_T, UInt<3>("h5")) @[Complex.scala 77:59]
          node _vecCtrlBundle_5_ldest_T_2 = tail(_vecCtrlBundle_5_ldest_T_1, 1) @[Complex.scala 77:59]
          vecCtrlBundle[5].ldest <= _vecCtrlBundle_5_ldest_T_2 @[Complex.scala 77:40]
          vecCtrlBundle[5].fuType <= UInt<5>("h18") @[Complex.scala 78:41]
          vecCtrlBundle[5].fuOpType <= UInt<7>("hf") @[Complex.scala 79:43]
          vecCtrlBundle[5].rfWen <= UInt<1>("h0") @[Complex.scala 80:40]
          vecCtrlBundle[5].fpWen <= UInt<1>("h0") @[Complex.scala 81:40]
          vecCtrlBundle[5].vecWen <= UInt<1>("h1") @[Complex.scala 82:41]
          vecCtrlBundle[5].mWen <= UInt<1>("h0") @[Complex.scala 83:39]
          vecCtrlBundle[5].vxsatWen <= UInt<1>("h0") @[Complex.scala 84:43]
          vecCtrlBundle[5].isXSTrap <= UInt<1>("h0") @[Complex.scala 85:43]
          vecCtrlBundle[5].noSpecExec <= UInt<1>("h0") @[Complex.scala 86:45]
          vecCtrlBundle[5].blockBackward <= UInt<1>("h0") @[Complex.scala 87:48]
          vecCtrlBundle[5].flushPipe <= UInt<1>("h0") @[Complex.scala 88:44]
          vecCtrlBundle[5].selImm <= UInt<1>("h0") @[Complex.scala 89:41]
          node vecCtrlBundle_5_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrlBundle_5_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrlBundle_5_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrlBundle_5_imm_minBits_1 = cat(_vecCtrlBundle_5_imm_minBits_T, _vecCtrlBundle_5_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_5_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrlBundle_5_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrlBundle_5_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrlBundle_5_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrlBundle_5_imm_minBits_lo = cat(_vecCtrlBundle_5_imm_minBits_T_4, _vecCtrlBundle_5_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrlBundle_5_imm_minBits_hi = cat(_vecCtrlBundle_5_imm_minBits_T_2, _vecCtrlBundle_5_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrlBundle_5_imm_minBits_2 = cat(vecCtrlBundle_5_imm_minBits_hi, vecCtrlBundle_5_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrlBundle_5_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrlBundle_5_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrlBundle_5_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrlBundle_5_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrlBundle_5_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrlBundle_5_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrlBundle_5_imm_minBits_lo_1 = cat(_vecCtrlBundle_5_imm_minBits_T_9, _vecCtrlBundle_5_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrlBundle_5_imm_minBits_hi_hi = cat(_vecCtrlBundle_5_imm_minBits_T_6, _vecCtrlBundle_5_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrlBundle_5_imm_minBits_hi_1 = cat(vecCtrlBundle_5_imm_minBits_hi_hi, _vecCtrlBundle_5_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrlBundle_5_imm_minBits_4 = cat(vecCtrlBundle_5_imm_minBits_hi_1, vecCtrlBundle_5_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_5_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrlBundle_5_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrlBundle_5_imm_minBits_5 = cat(_vecCtrlBundle_5_imm_minBits_T_11, _vecCtrlBundle_5_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrlBundle_5_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrlBundle_5_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrlBundle_5_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrlBundle_5_imm_T = eq(UInt<3>("h4"), vecCtrlBundle[5].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_5_imm_T_1 = eq(UInt<1>("h0"), vecCtrlBundle[5].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_5_imm_T_2 = eq(UInt<1>("h1"), vecCtrlBundle[5].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_5_imm_T_3 = eq(UInt<2>("h2"), vecCtrlBundle[5].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_5_imm_T_4 = eq(UInt<2>("h3"), vecCtrlBundle[5].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_5_imm_T_5 = eq(UInt<3>("h5"), vecCtrlBundle[5].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_5_imm_T_6 = eq(UInt<4>("h8"), vecCtrlBundle[5].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_5_imm_T_7 = eq(UInt<4>("h9"), vecCtrlBundle[5].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_5_imm_T_8 = eq(UInt<4>("ha"), vecCtrlBundle[5].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_5_imm_T_9 = mux(_vecCtrlBundle_5_imm_T, vecCtrlBundle_5_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_10 = mux(_vecCtrlBundle_5_imm_T_1, vecCtrlBundle_5_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_11 = mux(_vecCtrlBundle_5_imm_T_2, vecCtrlBundle_5_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_12 = mux(_vecCtrlBundle_5_imm_T_3, vecCtrlBundle_5_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_13 = mux(_vecCtrlBundle_5_imm_T_4, vecCtrlBundle_5_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_14 = mux(_vecCtrlBundle_5_imm_T_5, vecCtrlBundle_5_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_15 = mux(_vecCtrlBundle_5_imm_T_6, vecCtrlBundle_5_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_16 = mux(_vecCtrlBundle_5_imm_T_7, vecCtrlBundle_5_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_17 = mux(_vecCtrlBundle_5_imm_T_8, vecCtrlBundle_5_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_18 = or(_vecCtrlBundle_5_imm_T_9, _vecCtrlBundle_5_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_19 = or(_vecCtrlBundle_5_imm_T_18, _vecCtrlBundle_5_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_20 = or(_vecCtrlBundle_5_imm_T_19, _vecCtrlBundle_5_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_21 = or(_vecCtrlBundle_5_imm_T_20, _vecCtrlBundle_5_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_22 = or(_vecCtrlBundle_5_imm_T_21, _vecCtrlBundle_5_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_23 = or(_vecCtrlBundle_5_imm_T_22, _vecCtrlBundle_5_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_24 = or(_vecCtrlBundle_5_imm_T_23, _vecCtrlBundle_5_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrlBundle_5_imm_T_25 = or(_vecCtrlBundle_5_imm_T_24, _vecCtrlBundle_5_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrlBundle_5_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrlBundle_5_imm_WIRE <= _vecCtrlBundle_5_imm_T_25 @[Mux.scala 27:73]
          vecCtrlBundle[5].imm <= _vecCtrlBundle_5_imm_WIRE @[Complex.scala 90:38]
          vecCtrlBundle[5].commitType <= UInt<1>("h0") @[Complex.scala 97:45]
          vecCtrlBundle[5].isMove <= UInt<1>("h0") @[Complex.scala 99:41]
          vecCtrlBundle[5].singleStep <= UInt<1>("h0") @[Complex.scala 100:45]
          vecCtrlBundle[5].replayInst <= UInt<1>("h0") @[Complex.scala 101:45]
          vecCtrlBundle[6].srcType[0] <= UInt<3>("h4") @[Complex.scala 69:45]
          vecCtrlBundle[6].srcType[1] <= UInt<3>("h4") @[Complex.scala 70:45]
          vecCtrlBundle[6].srcType[2] <= UInt<1>("h0") @[Complex.scala 71:45]
          vecCtrlBundle[6].srcType[3] <= UInt<1>("h0") @[Complex.scala 72:45]
          node _vecCtrlBundle_6_lsrc_0_T = bits(io.instr, 19, 15) @[Complex.scala 73:53]
          node _vecCtrlBundle_6_lsrc_0_T_1 = add(_vecCtrlBundle_6_lsrc_0_T, UInt<3>("h6")) @[Complex.scala 73:62]
          node _vecCtrlBundle_6_lsrc_0_T_2 = tail(_vecCtrlBundle_6_lsrc_0_T_1, 1) @[Complex.scala 73:62]
          vecCtrlBundle[6].lsrc[0] <= _vecCtrlBundle_6_lsrc_0_T_2 @[Complex.scala 73:42]
          node _vecCtrlBundle_6_lsrc_1_T = bits(io.instr, 24, 20) @[Complex.scala 74:53]
          node _vecCtrlBundle_6_lsrc_1_T_1 = add(_vecCtrlBundle_6_lsrc_1_T, UInt<3>("h6")) @[Complex.scala 74:62]
          node _vecCtrlBundle_6_lsrc_1_T_2 = tail(_vecCtrlBundle_6_lsrc_1_T_1, 1) @[Complex.scala 74:62]
          vecCtrlBundle[6].lsrc[1] <= _vecCtrlBundle_6_lsrc_1_T_2 @[Complex.scala 74:42]
          vecCtrlBundle[6].lsrc[2] <= UInt<1>("h0") @[Complex.scala 75:42]
          vecCtrlBundle[6].lsrc[3] <= UInt<1>("h0") @[Complex.scala 76:42]
          node _vecCtrlBundle_6_ldest_T = bits(io.instr, 11, 7) @[Complex.scala 77:51]
          node _vecCtrlBundle_6_ldest_T_1 = add(_vecCtrlBundle_6_ldest_T, UInt<3>("h6")) @[Complex.scala 77:59]
          node _vecCtrlBundle_6_ldest_T_2 = tail(_vecCtrlBundle_6_ldest_T_1, 1) @[Complex.scala 77:59]
          vecCtrlBundle[6].ldest <= _vecCtrlBundle_6_ldest_T_2 @[Complex.scala 77:40]
          vecCtrlBundle[6].fuType <= UInt<5>("h18") @[Complex.scala 78:41]
          vecCtrlBundle[6].fuOpType <= UInt<7>("hf") @[Complex.scala 79:43]
          vecCtrlBundle[6].rfWen <= UInt<1>("h0") @[Complex.scala 80:40]
          vecCtrlBundle[6].fpWen <= UInt<1>("h0") @[Complex.scala 81:40]
          vecCtrlBundle[6].vecWen <= UInt<1>("h1") @[Complex.scala 82:41]
          vecCtrlBundle[6].mWen <= UInt<1>("h0") @[Complex.scala 83:39]
          vecCtrlBundle[6].vxsatWen <= UInt<1>("h0") @[Complex.scala 84:43]
          vecCtrlBundle[6].isXSTrap <= UInt<1>("h0") @[Complex.scala 85:43]
          vecCtrlBundle[6].noSpecExec <= UInt<1>("h0") @[Complex.scala 86:45]
          vecCtrlBundle[6].blockBackward <= UInt<1>("h0") @[Complex.scala 87:48]
          vecCtrlBundle[6].flushPipe <= UInt<1>("h0") @[Complex.scala 88:44]
          vecCtrlBundle[6].selImm <= UInt<1>("h0") @[Complex.scala 89:41]
          node vecCtrlBundle_6_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrlBundle_6_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrlBundle_6_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrlBundle_6_imm_minBits_1 = cat(_vecCtrlBundle_6_imm_minBits_T, _vecCtrlBundle_6_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_6_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrlBundle_6_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrlBundle_6_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrlBundle_6_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrlBundle_6_imm_minBits_lo = cat(_vecCtrlBundle_6_imm_minBits_T_4, _vecCtrlBundle_6_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrlBundle_6_imm_minBits_hi = cat(_vecCtrlBundle_6_imm_minBits_T_2, _vecCtrlBundle_6_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrlBundle_6_imm_minBits_2 = cat(vecCtrlBundle_6_imm_minBits_hi, vecCtrlBundle_6_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrlBundle_6_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrlBundle_6_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrlBundle_6_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrlBundle_6_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrlBundle_6_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrlBundle_6_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrlBundle_6_imm_minBits_lo_1 = cat(_vecCtrlBundle_6_imm_minBits_T_9, _vecCtrlBundle_6_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrlBundle_6_imm_minBits_hi_hi = cat(_vecCtrlBundle_6_imm_minBits_T_6, _vecCtrlBundle_6_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrlBundle_6_imm_minBits_hi_1 = cat(vecCtrlBundle_6_imm_minBits_hi_hi, _vecCtrlBundle_6_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrlBundle_6_imm_minBits_4 = cat(vecCtrlBundle_6_imm_minBits_hi_1, vecCtrlBundle_6_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_6_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrlBundle_6_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrlBundle_6_imm_minBits_5 = cat(_vecCtrlBundle_6_imm_minBits_T_11, _vecCtrlBundle_6_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrlBundle_6_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrlBundle_6_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrlBundle_6_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrlBundle_6_imm_T = eq(UInt<3>("h4"), vecCtrlBundle[6].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_6_imm_T_1 = eq(UInt<1>("h0"), vecCtrlBundle[6].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_6_imm_T_2 = eq(UInt<1>("h1"), vecCtrlBundle[6].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_6_imm_T_3 = eq(UInt<2>("h2"), vecCtrlBundle[6].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_6_imm_T_4 = eq(UInt<2>("h3"), vecCtrlBundle[6].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_6_imm_T_5 = eq(UInt<3>("h5"), vecCtrlBundle[6].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_6_imm_T_6 = eq(UInt<4>("h8"), vecCtrlBundle[6].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_6_imm_T_7 = eq(UInt<4>("h9"), vecCtrlBundle[6].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_6_imm_T_8 = eq(UInt<4>("ha"), vecCtrlBundle[6].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_6_imm_T_9 = mux(_vecCtrlBundle_6_imm_T, vecCtrlBundle_6_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_10 = mux(_vecCtrlBundle_6_imm_T_1, vecCtrlBundle_6_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_11 = mux(_vecCtrlBundle_6_imm_T_2, vecCtrlBundle_6_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_12 = mux(_vecCtrlBundle_6_imm_T_3, vecCtrlBundle_6_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_13 = mux(_vecCtrlBundle_6_imm_T_4, vecCtrlBundle_6_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_14 = mux(_vecCtrlBundle_6_imm_T_5, vecCtrlBundle_6_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_15 = mux(_vecCtrlBundle_6_imm_T_6, vecCtrlBundle_6_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_16 = mux(_vecCtrlBundle_6_imm_T_7, vecCtrlBundle_6_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_17 = mux(_vecCtrlBundle_6_imm_T_8, vecCtrlBundle_6_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_18 = or(_vecCtrlBundle_6_imm_T_9, _vecCtrlBundle_6_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_19 = or(_vecCtrlBundle_6_imm_T_18, _vecCtrlBundle_6_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_20 = or(_vecCtrlBundle_6_imm_T_19, _vecCtrlBundle_6_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_21 = or(_vecCtrlBundle_6_imm_T_20, _vecCtrlBundle_6_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_22 = or(_vecCtrlBundle_6_imm_T_21, _vecCtrlBundle_6_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_23 = or(_vecCtrlBundle_6_imm_T_22, _vecCtrlBundle_6_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_24 = or(_vecCtrlBundle_6_imm_T_23, _vecCtrlBundle_6_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrlBundle_6_imm_T_25 = or(_vecCtrlBundle_6_imm_T_24, _vecCtrlBundle_6_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrlBundle_6_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrlBundle_6_imm_WIRE <= _vecCtrlBundle_6_imm_T_25 @[Mux.scala 27:73]
          vecCtrlBundle[6].imm <= _vecCtrlBundle_6_imm_WIRE @[Complex.scala 90:38]
          vecCtrlBundle[6].commitType <= UInt<1>("h0") @[Complex.scala 97:45]
          vecCtrlBundle[6].isMove <= UInt<1>("h0") @[Complex.scala 99:41]
          vecCtrlBundle[6].singleStep <= UInt<1>("h0") @[Complex.scala 100:45]
          vecCtrlBundle[6].replayInst <= UInt<1>("h0") @[Complex.scala 101:45]
          vecCtrlBundle[7].srcType[0] <= UInt<3>("h4") @[Complex.scala 69:45]
          vecCtrlBundle[7].srcType[1] <= UInt<3>("h4") @[Complex.scala 70:45]
          vecCtrlBundle[7].srcType[2] <= UInt<1>("h0") @[Complex.scala 71:45]
          vecCtrlBundle[7].srcType[3] <= UInt<1>("h0") @[Complex.scala 72:45]
          node _vecCtrlBundle_7_lsrc_0_T = bits(io.instr, 19, 15) @[Complex.scala 73:53]
          node _vecCtrlBundle_7_lsrc_0_T_1 = add(_vecCtrlBundle_7_lsrc_0_T, UInt<3>("h7")) @[Complex.scala 73:62]
          node _vecCtrlBundle_7_lsrc_0_T_2 = tail(_vecCtrlBundle_7_lsrc_0_T_1, 1) @[Complex.scala 73:62]
          vecCtrlBundle[7].lsrc[0] <= _vecCtrlBundle_7_lsrc_0_T_2 @[Complex.scala 73:42]
          node _vecCtrlBundle_7_lsrc_1_T = bits(io.instr, 24, 20) @[Complex.scala 74:53]
          node _vecCtrlBundle_7_lsrc_1_T_1 = add(_vecCtrlBundle_7_lsrc_1_T, UInt<3>("h7")) @[Complex.scala 74:62]
          node _vecCtrlBundle_7_lsrc_1_T_2 = tail(_vecCtrlBundle_7_lsrc_1_T_1, 1) @[Complex.scala 74:62]
          vecCtrlBundle[7].lsrc[1] <= _vecCtrlBundle_7_lsrc_1_T_2 @[Complex.scala 74:42]
          vecCtrlBundle[7].lsrc[2] <= UInt<1>("h0") @[Complex.scala 75:42]
          vecCtrlBundle[7].lsrc[3] <= UInt<1>("h0") @[Complex.scala 76:42]
          node _vecCtrlBundle_7_ldest_T = bits(io.instr, 11, 7) @[Complex.scala 77:51]
          node _vecCtrlBundle_7_ldest_T_1 = add(_vecCtrlBundle_7_ldest_T, UInt<3>("h7")) @[Complex.scala 77:59]
          node _vecCtrlBundle_7_ldest_T_2 = tail(_vecCtrlBundle_7_ldest_T_1, 1) @[Complex.scala 77:59]
          vecCtrlBundle[7].ldest <= _vecCtrlBundle_7_ldest_T_2 @[Complex.scala 77:40]
          vecCtrlBundle[7].fuType <= UInt<5>("h18") @[Complex.scala 78:41]
          vecCtrlBundle[7].fuOpType <= UInt<7>("hf") @[Complex.scala 79:43]
          vecCtrlBundle[7].rfWen <= UInt<1>("h0") @[Complex.scala 80:40]
          vecCtrlBundle[7].fpWen <= UInt<1>("h0") @[Complex.scala 81:40]
          vecCtrlBundle[7].vecWen <= UInt<1>("h1") @[Complex.scala 82:41]
          vecCtrlBundle[7].mWen <= UInt<1>("h0") @[Complex.scala 83:39]
          vecCtrlBundle[7].vxsatWen <= UInt<1>("h0") @[Complex.scala 84:43]
          vecCtrlBundle[7].isXSTrap <= UInt<1>("h0") @[Complex.scala 85:43]
          vecCtrlBundle[7].noSpecExec <= UInt<1>("h0") @[Complex.scala 86:45]
          vecCtrlBundle[7].blockBackward <= UInt<1>("h0") @[Complex.scala 87:48]
          vecCtrlBundle[7].flushPipe <= UInt<1>("h0") @[Complex.scala 88:44]
          vecCtrlBundle[7].selImm <= UInt<1>("h0") @[Complex.scala 89:41]
          node vecCtrlBundle_7_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrlBundle_7_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrlBundle_7_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrlBundle_7_imm_minBits_1 = cat(_vecCtrlBundle_7_imm_minBits_T, _vecCtrlBundle_7_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_7_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrlBundle_7_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrlBundle_7_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrlBundle_7_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrlBundle_7_imm_minBits_lo = cat(_vecCtrlBundle_7_imm_minBits_T_4, _vecCtrlBundle_7_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrlBundle_7_imm_minBits_hi = cat(_vecCtrlBundle_7_imm_minBits_T_2, _vecCtrlBundle_7_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrlBundle_7_imm_minBits_2 = cat(vecCtrlBundle_7_imm_minBits_hi, vecCtrlBundle_7_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrlBundle_7_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrlBundle_7_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrlBundle_7_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrlBundle_7_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrlBundle_7_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrlBundle_7_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrlBundle_7_imm_minBits_lo_1 = cat(_vecCtrlBundle_7_imm_minBits_T_9, _vecCtrlBundle_7_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrlBundle_7_imm_minBits_hi_hi = cat(_vecCtrlBundle_7_imm_minBits_T_6, _vecCtrlBundle_7_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrlBundle_7_imm_minBits_hi_1 = cat(vecCtrlBundle_7_imm_minBits_hi_hi, _vecCtrlBundle_7_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrlBundle_7_imm_minBits_4 = cat(vecCtrlBundle_7_imm_minBits_hi_1, vecCtrlBundle_7_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrlBundle_7_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrlBundle_7_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrlBundle_7_imm_minBits_5 = cat(_vecCtrlBundle_7_imm_minBits_T_11, _vecCtrlBundle_7_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrlBundle_7_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrlBundle_7_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrlBundle_7_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrlBundle_7_imm_T = eq(UInt<3>("h4"), vecCtrlBundle[7].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_7_imm_T_1 = eq(UInt<1>("h0"), vecCtrlBundle[7].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_7_imm_T_2 = eq(UInt<1>("h1"), vecCtrlBundle[7].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_7_imm_T_3 = eq(UInt<2>("h2"), vecCtrlBundle[7].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_7_imm_T_4 = eq(UInt<2>("h3"), vecCtrlBundle[7].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_7_imm_T_5 = eq(UInt<3>("h5"), vecCtrlBundle[7].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_7_imm_T_6 = eq(UInt<4>("h8"), vecCtrlBundle[7].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_7_imm_T_7 = eq(UInt<4>("h9"), vecCtrlBundle[7].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_7_imm_T_8 = eq(UInt<4>("ha"), vecCtrlBundle[7].selImm) @[Bundle.scala 327:34]
          node _vecCtrlBundle_7_imm_T_9 = mux(_vecCtrlBundle_7_imm_T, vecCtrlBundle_7_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_10 = mux(_vecCtrlBundle_7_imm_T_1, vecCtrlBundle_7_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_11 = mux(_vecCtrlBundle_7_imm_T_2, vecCtrlBundle_7_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_12 = mux(_vecCtrlBundle_7_imm_T_3, vecCtrlBundle_7_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_13 = mux(_vecCtrlBundle_7_imm_T_4, vecCtrlBundle_7_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_14 = mux(_vecCtrlBundle_7_imm_T_5, vecCtrlBundle_7_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_15 = mux(_vecCtrlBundle_7_imm_T_6, vecCtrlBundle_7_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_16 = mux(_vecCtrlBundle_7_imm_T_7, vecCtrlBundle_7_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_17 = mux(_vecCtrlBundle_7_imm_T_8, vecCtrlBundle_7_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_18 = or(_vecCtrlBundle_7_imm_T_9, _vecCtrlBundle_7_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_19 = or(_vecCtrlBundle_7_imm_T_18, _vecCtrlBundle_7_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_20 = or(_vecCtrlBundle_7_imm_T_19, _vecCtrlBundle_7_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_21 = or(_vecCtrlBundle_7_imm_T_20, _vecCtrlBundle_7_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_22 = or(_vecCtrlBundle_7_imm_T_21, _vecCtrlBundle_7_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_23 = or(_vecCtrlBundle_7_imm_T_22, _vecCtrlBundle_7_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_24 = or(_vecCtrlBundle_7_imm_T_23, _vecCtrlBundle_7_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrlBundle_7_imm_T_25 = or(_vecCtrlBundle_7_imm_T_24, _vecCtrlBundle_7_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrlBundle_7_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrlBundle_7_imm_WIRE <= _vecCtrlBundle_7_imm_T_25 @[Mux.scala 27:73]
          vecCtrlBundle[7].imm <= _vecCtrlBundle_7_imm_WIRE @[Complex.scala 90:38]
          vecCtrlBundle[7].commitType <= UInt<1>("h0") @[Complex.scala 97:45]
          vecCtrlBundle[7].isMove <= UInt<1>("h0") @[Complex.scala 99:41]
          vecCtrlBundle[7].singleStep <= UInt<1>("h0") @[Complex.scala 100:45]
          vecCtrlBundle[7].replayInst <= UInt<1>("h0") @[Complex.scala 101:45]
    reg vecCtrlReg : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}[6], clock with :
      reset => (UInt<1>("h0"), vecCtrlReg) @[Complex.scala 117:23]
    wire num : UInt<3> @[Complex.scala 118:17]
    wire offset : UInt<1>[6] @[Complex.scala 119:20]
    reg stateReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Complex.scala 121:25]
    node _T_9 = eq(UInt<1>("h0"), stateReg) @[Complex.scala 122:20]
    when _T_9 : @[Complex.scala 122:20]
      node _T_10 = leq(numOfUop, UInt<3>("h6")) @[Complex.scala 124:21]
      when _T_10 : @[Complex.scala 124:29]
        stateReg <= UInt<1>("h0") @[Complex.scala 126:18]
        vecCtrlReg[0] <= vecCtrlBundle[0] @[Complex.scala 128:25]
        vecCtrlReg[1] <= vecCtrlBundle[1] @[Complex.scala 128:25]
        vecCtrlReg[2] <= vecCtrlBundle[2] @[Complex.scala 128:25]
        vecCtrlReg[3] <= vecCtrlBundle[3] @[Complex.scala 128:25]
        vecCtrlReg[4] <= vecCtrlBundle[4] @[Complex.scala 128:25]
        vecCtrlReg[5] <= vecCtrlBundle[5] @[Complex.scala 128:25]
      else :
        stateReg <= UInt<1>("h1") @[Complex.scala 135:18]
        vecCtrlReg[0] <= vecCtrlBundle[0] @[Complex.scala 137:25]
        vecCtrlReg[1] <= vecCtrlBundle[1] @[Complex.scala 137:25]
        vecCtrlReg[2] <= vecCtrlBundle[2] @[Complex.scala 137:25]
        vecCtrlReg[3] <= vecCtrlBundle[3] @[Complex.scala 137:25]
        vecCtrlReg[4] <= vecCtrlBundle[4] @[Complex.scala 137:25]
        vecCtrlReg[5] <= vecCtrlBundle[5] @[Complex.scala 137:25]
    else :
      node _T_11 = eq(UInt<1>("h1"), stateReg) @[Complex.scala 122:20]
      when _T_11 : @[Complex.scala 122:20]
        stateReg <= UInt<1>("h0") @[Complex.scala 145:16]
        vecCtrlReg[0] <= vecCtrlBundle[6] @[Complex.scala 147:23]
        vecCtrlReg[1] <= vecCtrlBundle[7] @[Complex.scala 147:23]
    node _T_12 = eq(stateReg, UInt<1>("h0")) @[Complex.scala 154:17]
    node _T_13 = leq(numOfUop, UInt<3>("h6")) @[Complex.scala 154:40]
    node _T_14 = and(_T_12, _T_13) @[Complex.scala 154:28]
    when _T_14 : @[Complex.scala 154:48]
      num <= numOfUop @[Complex.scala 155:9]
    else :
      node _T_15 = eq(stateReg, UInt<1>("h0")) @[Complex.scala 156:24]
      node _T_16 = gt(numOfUop, UInt<3>("h6")) @[Complex.scala 156:47]
      node _T_17 = and(_T_15, _T_16) @[Complex.scala 156:35]
      when _T_17 : @[Complex.scala 156:54]
        num <= UInt<3>("h6") @[Complex.scala 157:9]
      else :
        node _T_18 = eq(stateReg, UInt<1>("h1")) @[Complex.scala 158:23]
        when _T_18 : @[Complex.scala 158:39]
          node _num_T = sub(numOfUop, UInt<3>("h6")) @[Complex.scala 159:21]
          node _num_T_1 = tail(_num_T, 1) @[Complex.scala 159:21]
          num <= _num_T_1 @[Complex.scala 159:9]
        else :
          num <= UInt<3>("h6") @[Complex.scala 161:9]
    reg io_num_REG : UInt, clock with :
      reset => (UInt<1>("h0"), io_num_REG) @[Complex.scala 164:20]
    io_num_REG <= num @[Complex.scala 164:20]
    io.num <= io_num_REG @[Complex.scala 164:10]
    node _T_19 = eq(stateReg, UInt<1>("h0")) @[Complex.scala 166:17]
    node _T_20 = leq(numOfUop, UInt<3>("h6")) @[Complex.scala 166:40]
    node _T_21 = and(_T_19, _T_20) @[Complex.scala 166:28]
    when _T_21 : @[Complex.scala 166:48]
      offset[0] <= UInt<1>("h0") @[Complex.scala 167:15]
      node _offset_1_T = eq(numOfUop, UInt<3>("h6")) @[Complex.scala 168:27]
      node _offset_1_T_1 = lt(numOfUop, UInt<3>("h6")) @[Complex.scala 168:48]
      node _offset_1_T_2 = and(_offset_1_T_1, io.isComplex[1]) @[Complex.scala 168:54]
      node _offset_1_T_3 = or(_offset_1_T, _offset_1_T_2) @[Complex.scala 168:35]
      offset[1] <= _offset_1_T_3 @[Complex.scala 168:15]
      node _offset_2_T = eq(numOfUop, UInt<3>("h5")) @[Complex.scala 169:28]
      node _offset_2_T_1 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 169:39]
      node _offset_2_T_2 = and(_offset_2_T, _offset_2_T_1) @[Complex.scala 169:36]
      node _offset_2_T_3 = lt(numOfUop, UInt<3>("h5")) @[Complex.scala 169:70]
      node _offset_2_T_4 = and(_offset_2_T_3, io.isComplex[2]) @[Complex.scala 169:76]
      node _offset_2_T_5 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 169:98]
      node _offset_2_T_6 = and(_offset_2_T_4, _offset_2_T_5) @[Complex.scala 169:95]
      node _offset_2_T_7 = or(_offset_2_T_2, _offset_2_T_6) @[Complex.scala 169:57]
      offset[2] <= _offset_2_T_7 @[Complex.scala 169:15]
      node _offset_3_T = eq(numOfUop, UInt<3>("h4")) @[Complex.scala 170:28]
      node _offset_3_T_1 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 170:39]
      node _offset_3_T_2 = and(_offset_3_T, _offset_3_T_1) @[Complex.scala 170:36]
      node _offset_3_T_3 = eq(io.isComplex[2], UInt<1>("h0")) @[Complex.scala 170:59]
      node _offset_3_T_4 = and(_offset_3_T_2, _offset_3_T_3) @[Complex.scala 170:56]
      node _offset_3_T_5 = lt(numOfUop, UInt<3>("h4")) @[Complex.scala 170:90]
      node _offset_3_T_6 = and(_offset_3_T_5, io.isComplex[3]) @[Complex.scala 170:96]
      node _offset_3_T_7 = eq(io.isComplex[2], UInt<1>("h0")) @[Complex.scala 170:118]
      node _offset_3_T_8 = and(_offset_3_T_6, _offset_3_T_7) @[Complex.scala 170:115]
      node _offset_3_T_9 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 170:138]
      node _offset_3_T_10 = and(_offset_3_T_8, _offset_3_T_9) @[Complex.scala 170:135]
      node _offset_3_T_11 = or(_offset_3_T_4, _offset_3_T_10) @[Complex.scala 170:77]
      offset[3] <= _offset_3_T_11 @[Complex.scala 170:15]
      node _offset_4_T = eq(numOfUop, UInt<2>("h3")) @[Complex.scala 171:28]
      node _offset_4_T_1 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 171:39]
      node _offset_4_T_2 = and(_offset_4_T, _offset_4_T_1) @[Complex.scala 171:36]
      node _offset_4_T_3 = eq(io.isComplex[2], UInt<1>("h0")) @[Complex.scala 171:59]
      node _offset_4_T_4 = and(_offset_4_T_2, _offset_4_T_3) @[Complex.scala 171:56]
      node _offset_4_T_5 = eq(io.isComplex[3], UInt<1>("h0")) @[Complex.scala 171:79]
      node _offset_4_T_6 = and(_offset_4_T_4, _offset_4_T_5) @[Complex.scala 171:76]
      node _offset_4_T_7 = lt(numOfUop, UInt<2>("h3")) @[Complex.scala 171:110]
      node _offset_4_T_8 = and(_offset_4_T_7, io.isComplex[4]) @[Complex.scala 171:116]
      node _offset_4_T_9 = eq(io.isComplex[3], UInt<1>("h0")) @[Complex.scala 171:138]
      node _offset_4_T_10 = and(_offset_4_T_8, _offset_4_T_9) @[Complex.scala 171:135]
      node _offset_4_T_11 = eq(io.isComplex[2], UInt<1>("h0")) @[Complex.scala 171:158]
      node _offset_4_T_12 = and(_offset_4_T_10, _offset_4_T_11) @[Complex.scala 171:155]
      node _offset_4_T_13 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 171:178]
      node _offset_4_T_14 = and(_offset_4_T_12, _offset_4_T_13) @[Complex.scala 171:175]
      node _offset_4_T_15 = or(_offset_4_T_6, _offset_4_T_14) @[Complex.scala 171:97]
      offset[4] <= _offset_4_T_15 @[Complex.scala 171:15]
      node _offset_5_T = eq(numOfUop, UInt<2>("h2")) @[Complex.scala 172:28]
      node _offset_5_T_1 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 172:39]
      node _offset_5_T_2 = and(_offset_5_T, _offset_5_T_1) @[Complex.scala 172:36]
      node _offset_5_T_3 = eq(io.isComplex[2], UInt<1>("h0")) @[Complex.scala 172:59]
      node _offset_5_T_4 = and(_offset_5_T_2, _offset_5_T_3) @[Complex.scala 172:56]
      node _offset_5_T_5 = eq(io.isComplex[3], UInt<1>("h0")) @[Complex.scala 172:79]
      node _offset_5_T_6 = and(_offset_5_T_4, _offset_5_T_5) @[Complex.scala 172:76]
      node _offset_5_T_7 = eq(io.isComplex[4], UInt<1>("h0")) @[Complex.scala 172:99]
      node _offset_5_T_8 = and(_offset_5_T_6, _offset_5_T_7) @[Complex.scala 172:96]
      node _offset_5_T_9 = lt(numOfUop, UInt<2>("h2")) @[Complex.scala 172:130]
      node _offset_5_T_10 = and(_offset_5_T_9, io.isComplex[5]) @[Complex.scala 172:136]
      node _offset_5_T_11 = eq(io.isComplex[4], UInt<1>("h0")) @[Complex.scala 172:158]
      node _offset_5_T_12 = and(_offset_5_T_10, _offset_5_T_11) @[Complex.scala 172:155]
      node _offset_5_T_13 = eq(io.isComplex[3], UInt<1>("h0")) @[Complex.scala 172:178]
      node _offset_5_T_14 = and(_offset_5_T_12, _offset_5_T_13) @[Complex.scala 172:175]
      node _offset_5_T_15 = eq(io.isComplex[2], UInt<1>("h0")) @[Complex.scala 172:198]
      node _offset_5_T_16 = and(_offset_5_T_14, _offset_5_T_15) @[Complex.scala 172:195]
      node _offset_5_T_17 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 172:218]
      node _offset_5_T_18 = and(_offset_5_T_16, _offset_5_T_17) @[Complex.scala 172:215]
      node _offset_5_T_19 = or(_offset_5_T_8, _offset_5_T_18) @[Complex.scala 172:117]
      offset[5] <= _offset_5_T_19 @[Complex.scala 172:15]
    else :
      node _T_22 = eq(stateReg, UInt<1>("h0")) @[Complex.scala 173:23]
      node _T_23 = gt(numOfUop, UInt<3>("h6")) @[Complex.scala 173:46]
      node _T_24 = and(_T_22, _T_23) @[Complex.scala 173:34]
      when _T_24 : @[Complex.scala 173:53]
        offset[0] <= UInt<1>("h1") @[Complex.scala 174:15]
        offset[1] <= UInt<1>("h0") @[Complex.scala 176:17]
        offset[2] <= UInt<1>("h0") @[Complex.scala 176:17]
        offset[3] <= UInt<1>("h0") @[Complex.scala 176:17]
        offset[4] <= UInt<1>("h0") @[Complex.scala 176:17]
        offset[5] <= UInt<1>("h0") @[Complex.scala 176:17]
      else :
        node _T_25 = eq(stateReg, UInt<1>("h1")) @[Complex.scala 178:23]
        when _T_25 : @[Complex.scala 178:39]
          offset[0] <= UInt<1>("h0") @[Complex.scala 179:15]
          offset[1] <= io.isComplex[1] @[Complex.scala 180:15]
          node _offset_2_T_8 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 181:18]
          node _offset_2_T_9 = and(_offset_2_T_8, io.isComplex[2]) @[Complex.scala 181:35]
          offset[2] <= _offset_2_T_9 @[Complex.scala 181:15]
          node _offset_3_T_12 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 182:18]
          node _offset_3_T_13 = eq(io.isComplex[2], UInt<1>("h0")) @[Complex.scala 182:38]
          node _offset_3_T_14 = and(_offset_3_T_12, _offset_3_T_13) @[Complex.scala 182:35]
          node _offset_3_T_15 = and(_offset_3_T_14, io.isComplex[3]) @[Complex.scala 182:55]
          offset[3] <= _offset_3_T_15 @[Complex.scala 182:15]
          node _offset_4_T_16 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 183:18]
          node _offset_4_T_17 = eq(io.isComplex[2], UInt<1>("h0")) @[Complex.scala 183:38]
          node _offset_4_T_18 = and(_offset_4_T_16, _offset_4_T_17) @[Complex.scala 183:35]
          node _offset_4_T_19 = eq(io.isComplex[3], UInt<1>("h0")) @[Complex.scala 183:58]
          node _offset_4_T_20 = and(_offset_4_T_18, _offset_4_T_19) @[Complex.scala 183:55]
          node _offset_4_T_21 = and(_offset_4_T_20, io.isComplex[4]) @[Complex.scala 183:75]
          offset[4] <= _offset_4_T_21 @[Complex.scala 183:15]
          node _offset_5_T_20 = eq(numOfUop, UInt<4>("h8")) @[Complex.scala 184:28]
          node _offset_5_T_21 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 184:39]
          node _offset_5_T_22 = and(_offset_5_T_20, _offset_5_T_21) @[Complex.scala 184:36]
          node _offset_5_T_23 = eq(io.isComplex[2], UInt<1>("h0")) @[Complex.scala 184:59]
          node _offset_5_T_24 = and(_offset_5_T_22, _offset_5_T_23) @[Complex.scala 184:56]
          node _offset_5_T_25 = eq(io.isComplex[3], UInt<1>("h0")) @[Complex.scala 184:79]
          node _offset_5_T_26 = and(_offset_5_T_24, _offset_5_T_25) @[Complex.scala 184:76]
          node _offset_5_T_27 = eq(io.isComplex[4], UInt<1>("h0")) @[Complex.scala 184:99]
          node _offset_5_T_28 = and(_offset_5_T_26, _offset_5_T_27) @[Complex.scala 184:96]
          node _offset_5_T_29 = lt(numOfUop, UInt<4>("h8")) @[Complex.scala 184:130]
          node _offset_5_T_30 = and(_offset_5_T_29, io.isComplex[5]) @[Complex.scala 184:136]
          node _offset_5_T_31 = eq(io.isComplex[4], UInt<1>("h0")) @[Complex.scala 184:158]
          node _offset_5_T_32 = and(_offset_5_T_30, _offset_5_T_31) @[Complex.scala 184:155]
          node _offset_5_T_33 = eq(io.isComplex[3], UInt<1>("h0")) @[Complex.scala 184:178]
          node _offset_5_T_34 = and(_offset_5_T_32, _offset_5_T_33) @[Complex.scala 184:175]
          node _offset_5_T_35 = eq(io.isComplex[2], UInt<1>("h0")) @[Complex.scala 184:198]
          node _offset_5_T_36 = and(_offset_5_T_34, _offset_5_T_35) @[Complex.scala 184:195]
          node _offset_5_T_37 = eq(io.isComplex[1], UInt<1>("h0")) @[Complex.scala 184:218]
          node _offset_5_T_38 = and(_offset_5_T_36, _offset_5_T_37) @[Complex.scala 184:215]
          node _offset_5_T_39 = or(_offset_5_T_28, _offset_5_T_38) @[Complex.scala 184:117]
          offset[5] <= _offset_5_T_39 @[Complex.scala 184:15]
        else :
          offset[0] <= UInt<1>("h1") @[Complex.scala 186:15]
          offset[1] <= UInt<1>("h0") @[Complex.scala 188:17]
          offset[2] <= UInt<1>("h0") @[Complex.scala 188:17]
          offset[3] <= UInt<1>("h0") @[Complex.scala 188:17]
          offset[4] <= UInt<1>("h0") @[Complex.scala 188:17]
          offset[5] <= UInt<1>("h0") @[Complex.scala 188:17]
    reg REG : UInt<1>[6], clock with :
      reset => (UInt<1>("h0"), REG) @[Complex.scala 191:23]
    REG <= offset @[Complex.scala 191:23]
    io.offset <= REG @[Complex.scala 191:13]
    when offset[0] : @[Complex.scala 193:19]
      io.strIndex <= UInt<1>("h0") @[Complex.scala 194:17]
    else :
      when offset[1] : @[Complex.scala 195:26]
        io.strIndex <= UInt<1>("h1") @[Complex.scala 196:17]
      else :
        when offset[2] : @[Complex.scala 197:26]
          io.strIndex <= UInt<2>("h2") @[Complex.scala 198:17]
        else :
          when offset[3] : @[Complex.scala 199:26]
            io.strIndex <= UInt<2>("h3") @[Complex.scala 200:17]
          else :
            when offset[4] : @[Complex.scala 201:26]
              io.strIndex <= UInt<3>("h4") @[Complex.scala 202:17]
            else :
              when offset[5] : @[Complex.scala 203:26]
                io.strIndex <= UInt<3>("h5") @[Complex.scala 204:17]
              else :
                io.strIndex <= UInt<3>("h6") @[Complex.scala 206:17]
    io.vecCtrl <= vecCtrlReg @[Complex.scala 209:14]

  module Simple :
    input clock : Clock
    input reset : Reset
    output io : { flip instr : UInt<32>, vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}}

    wire vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>} @[Simple.scala 13:21]
    vecCtrl.srcType[0] <= UInt<1>("h0") @[Simple.scala 15:22]
    vecCtrl.srcType[1] <= UInt<1>("h0") @[Simple.scala 16:22]
    vecCtrl.srcType[2] <= UInt<1>("h0") @[Simple.scala 17:22]
    vecCtrl.srcType[3] <= UInt<1>("h0") @[Simple.scala 18:22]
    vecCtrl.lsrc[0] <= UInt<1>("h0") @[Simple.scala 19:19]
    vecCtrl.lsrc[1] <= UInt<1>("h0") @[Simple.scala 20:19]
    vecCtrl.lsrc[2] <= UInt<1>("h0") @[Simple.scala 21:19]
    vecCtrl.lsrc[3] <= UInt<1>("h0") @[Simple.scala 22:19]
    vecCtrl.ldest <= UInt<1>("h0") @[Simple.scala 23:17]
    vecCtrl.fuType <= UInt<1>("h0") @[Simple.scala 24:18]
    vecCtrl.fuOpType <= UInt<1>("h0") @[Simple.scala 25:20]
    vecCtrl.rfWen <= UInt<1>("h0") @[Simple.scala 26:17]
    vecCtrl.fpWen <= UInt<1>("h0") @[Simple.scala 27:17]
    vecCtrl.vecWen <= UInt<1>("h0") @[Simple.scala 28:18]
    vecCtrl.mWen <= UInt<1>("h0") @[Simple.scala 29:16]
    vecCtrl.vxsatWen <= UInt<1>("h0") @[Simple.scala 30:20]
    vecCtrl.isXSTrap <= UInt<1>("h0") @[Simple.scala 31:20]
    vecCtrl.noSpecExec <= UInt<1>("h0") @[Simple.scala 32:22]
    vecCtrl.blockBackward <= UInt<1>("h0") @[Simple.scala 33:25]
    vecCtrl.flushPipe <= UInt<1>("h0") @[Simple.scala 34:21]
    vecCtrl.selImm <= UInt<1>("h0") @[Simple.scala 35:18]
    vecCtrl.imm <= UInt<1>("h0") @[Simple.scala 36:15]
    vecCtrl.commitType <= UInt<1>("h0") @[Simple.scala 37:22]
    vecCtrl.isMove <= UInt<1>("h0") @[Simple.scala 38:18]
    vecCtrl.singleStep <= UInt<1>("h0") @[Simple.scala 39:22]
    vecCtrl.replayInst <= UInt<1>("h0") @[Simple.scala 40:22]
    node _T = bits(io.instr, 6, 0) @[Simple.scala 42:18]
    node _T_1 = eq(UInt<7>("h57"), _T) @[Simple.scala 42:26]
    when _T_1 : @[Simple.scala 42:26]
      node _T_2 = bits(io.instr, 14, 12) @[Simple.scala 44:22]
      node _T_3 = eq(UInt<1>("h0"), _T_2) @[Simple.scala 44:32]
      when _T_3 : @[Simple.scala 44:32]
        node _T_4 = bits(io.instr, 31, 26) @[Simple.scala 46:26]
        node _T_5 = eq(UInt<1>("h0"), _T_4) @[Simple.scala 46:36]
        when _T_5 : @[Simple.scala 46:36]
          vecCtrl.srcType[0] <= UInt<3>("h4") @[Simple.scala 49:34]
          vecCtrl.srcType[1] <= UInt<3>("h4") @[Simple.scala 50:34]
          vecCtrl.srcType[2] <= UInt<1>("h0") @[Simple.scala 51:34]
          vecCtrl.srcType[3] <= UInt<1>("h0") @[Simple.scala 52:34]
          node _vecCtrl_lsrc_0_T = bits(io.instr, 19, 15) @[Simple.scala 53:42]
          vecCtrl.lsrc[0] <= _vecCtrl_lsrc_0_T @[Simple.scala 53:31]
          node _vecCtrl_lsrc_1_T = bits(io.instr, 24, 20) @[Simple.scala 54:42]
          vecCtrl.lsrc[1] <= _vecCtrl_lsrc_1_T @[Simple.scala 54:31]
          vecCtrl.lsrc[2] <= UInt<1>("h0") @[Simple.scala 55:31]
          vecCtrl.lsrc[3] <= UInt<1>("h0") @[Simple.scala 56:31]
          node _vecCtrl_ldest_T = bits(io.instr, 11, 7) @[Simple.scala 57:40]
          vecCtrl.ldest <= _vecCtrl_ldest_T @[Simple.scala 57:29]
          vecCtrl.fuType <= UInt<5>("h18") @[Simple.scala 58:30]
          vecCtrl.fuOpType <= UInt<7>("hf") @[Simple.scala 59:32]
          vecCtrl.rfWen <= UInt<1>("h0") @[Simple.scala 60:29]
          vecCtrl.fpWen <= UInt<1>("h0") @[Simple.scala 61:29]
          vecCtrl.vecWen <= UInt<1>("h1") @[Simple.scala 62:30]
          vecCtrl.mWen <= UInt<1>("h0") @[Simple.scala 63:28]
          vecCtrl.vxsatWen <= UInt<1>("h0") @[Simple.scala 64:32]
          vecCtrl.isXSTrap <= UInt<1>("h0") @[Simple.scala 65:32]
          vecCtrl.noSpecExec <= UInt<1>("h0") @[Simple.scala 66:34]
          vecCtrl.blockBackward <= UInt<1>("h0") @[Simple.scala 67:37]
          vecCtrl.flushPipe <= UInt<1>("h0") @[Simple.scala 68:33]
          vecCtrl.selImm <= UInt<1>("h0") @[Simple.scala 69:30]
          node vecCtrl_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrl_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrl_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrl_imm_minBits_1 = cat(_vecCtrl_imm_minBits_T, _vecCtrl_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrl_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrl_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrl_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrl_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrl_imm_minBits_lo = cat(_vecCtrl_imm_minBits_T_4, _vecCtrl_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi = cat(_vecCtrl_imm_minBits_T_2, _vecCtrl_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_2 = cat(vecCtrl_imm_minBits_hi, vecCtrl_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrl_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrl_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrl_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrl_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrl_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrl_imm_minBits_lo_1 = cat(_vecCtrl_imm_minBits_T_9, _vecCtrl_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi_hi = cat(_vecCtrl_imm_minBits_T_6, _vecCtrl_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi_1 = cat(vecCtrl_imm_minBits_hi_hi, _vecCtrl_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_4 = cat(vecCtrl_imm_minBits_hi_1, vecCtrl_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrl_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrl_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrl_imm_minBits_5 = cat(_vecCtrl_imm_minBits_T_11, _vecCtrl_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrl_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrl_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrl_imm_T = eq(UInt<3>("h4"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_1 = eq(UInt<1>("h0"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_2 = eq(UInt<1>("h1"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_3 = eq(UInt<2>("h2"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_4 = eq(UInt<2>("h3"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_5 = eq(UInt<3>("h5"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_6 = eq(UInt<4>("h8"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_7 = eq(UInt<4>("h9"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_8 = eq(UInt<4>("ha"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_9 = mux(_vecCtrl_imm_T, vecCtrl_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_10 = mux(_vecCtrl_imm_T_1, vecCtrl_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_11 = mux(_vecCtrl_imm_T_2, vecCtrl_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_12 = mux(_vecCtrl_imm_T_3, vecCtrl_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_13 = mux(_vecCtrl_imm_T_4, vecCtrl_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_14 = mux(_vecCtrl_imm_T_5, vecCtrl_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_15 = mux(_vecCtrl_imm_T_6, vecCtrl_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_16 = mux(_vecCtrl_imm_T_7, vecCtrl_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_17 = mux(_vecCtrl_imm_T_8, vecCtrl_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_18 = or(_vecCtrl_imm_T_9, _vecCtrl_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_19 = or(_vecCtrl_imm_T_18, _vecCtrl_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_20 = or(_vecCtrl_imm_T_19, _vecCtrl_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_21 = or(_vecCtrl_imm_T_20, _vecCtrl_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_22 = or(_vecCtrl_imm_T_21, _vecCtrl_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_23 = or(_vecCtrl_imm_T_22, _vecCtrl_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_24 = or(_vecCtrl_imm_T_23, _vecCtrl_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_25 = or(_vecCtrl_imm_T_24, _vecCtrl_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrl_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrl_imm_WIRE <= _vecCtrl_imm_T_25 @[Mux.scala 27:73]
          vecCtrl.imm <= _vecCtrl_imm_WIRE @[Simple.scala 70:27]
          vecCtrl.commitType <= UInt<1>("h0") @[Simple.scala 77:34]
          vecCtrl.isMove <= UInt<1>("h0") @[Simple.scala 78:30]
          vecCtrl.singleStep <= UInt<1>("h0") @[Simple.scala 79:34]
          vecCtrl.replayInst <= UInt<1>("h0") @[Simple.scala 80:34]
    reg ctrlReg : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}, clock with :
      reset => (UInt<1>("h0"), ctrlReg) @[Simple.scala 92:24]
    ctrlReg <= vecCtrl @[Simple.scala 92:24]
    io.vecCtrl <= ctrlReg @[Simple.scala 94:14]

  module Simple_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip instr : UInt<32>, vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}}

    wire vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>} @[Simple.scala 13:21]
    vecCtrl.srcType[0] <= UInt<1>("h0") @[Simple.scala 15:22]
    vecCtrl.srcType[1] <= UInt<1>("h0") @[Simple.scala 16:22]
    vecCtrl.srcType[2] <= UInt<1>("h0") @[Simple.scala 17:22]
    vecCtrl.srcType[3] <= UInt<1>("h0") @[Simple.scala 18:22]
    vecCtrl.lsrc[0] <= UInt<1>("h0") @[Simple.scala 19:19]
    vecCtrl.lsrc[1] <= UInt<1>("h0") @[Simple.scala 20:19]
    vecCtrl.lsrc[2] <= UInt<1>("h0") @[Simple.scala 21:19]
    vecCtrl.lsrc[3] <= UInt<1>("h0") @[Simple.scala 22:19]
    vecCtrl.ldest <= UInt<1>("h0") @[Simple.scala 23:17]
    vecCtrl.fuType <= UInt<1>("h0") @[Simple.scala 24:18]
    vecCtrl.fuOpType <= UInt<1>("h0") @[Simple.scala 25:20]
    vecCtrl.rfWen <= UInt<1>("h0") @[Simple.scala 26:17]
    vecCtrl.fpWen <= UInt<1>("h0") @[Simple.scala 27:17]
    vecCtrl.vecWen <= UInt<1>("h0") @[Simple.scala 28:18]
    vecCtrl.mWen <= UInt<1>("h0") @[Simple.scala 29:16]
    vecCtrl.vxsatWen <= UInt<1>("h0") @[Simple.scala 30:20]
    vecCtrl.isXSTrap <= UInt<1>("h0") @[Simple.scala 31:20]
    vecCtrl.noSpecExec <= UInt<1>("h0") @[Simple.scala 32:22]
    vecCtrl.blockBackward <= UInt<1>("h0") @[Simple.scala 33:25]
    vecCtrl.flushPipe <= UInt<1>("h0") @[Simple.scala 34:21]
    vecCtrl.selImm <= UInt<1>("h0") @[Simple.scala 35:18]
    vecCtrl.imm <= UInt<1>("h0") @[Simple.scala 36:15]
    vecCtrl.commitType <= UInt<1>("h0") @[Simple.scala 37:22]
    vecCtrl.isMove <= UInt<1>("h0") @[Simple.scala 38:18]
    vecCtrl.singleStep <= UInt<1>("h0") @[Simple.scala 39:22]
    vecCtrl.replayInst <= UInt<1>("h0") @[Simple.scala 40:22]
    node _T = bits(io.instr, 6, 0) @[Simple.scala 42:18]
    node _T_1 = eq(UInt<7>("h57"), _T) @[Simple.scala 42:26]
    when _T_1 : @[Simple.scala 42:26]
      node _T_2 = bits(io.instr, 14, 12) @[Simple.scala 44:22]
      node _T_3 = eq(UInt<1>("h0"), _T_2) @[Simple.scala 44:32]
      when _T_3 : @[Simple.scala 44:32]
        node _T_4 = bits(io.instr, 31, 26) @[Simple.scala 46:26]
        node _T_5 = eq(UInt<1>("h0"), _T_4) @[Simple.scala 46:36]
        when _T_5 : @[Simple.scala 46:36]
          vecCtrl.srcType[0] <= UInt<3>("h4") @[Simple.scala 49:34]
          vecCtrl.srcType[1] <= UInt<3>("h4") @[Simple.scala 50:34]
          vecCtrl.srcType[2] <= UInt<1>("h0") @[Simple.scala 51:34]
          vecCtrl.srcType[3] <= UInt<1>("h0") @[Simple.scala 52:34]
          node _vecCtrl_lsrc_0_T = bits(io.instr, 19, 15) @[Simple.scala 53:42]
          vecCtrl.lsrc[0] <= _vecCtrl_lsrc_0_T @[Simple.scala 53:31]
          node _vecCtrl_lsrc_1_T = bits(io.instr, 24, 20) @[Simple.scala 54:42]
          vecCtrl.lsrc[1] <= _vecCtrl_lsrc_1_T @[Simple.scala 54:31]
          vecCtrl.lsrc[2] <= UInt<1>("h0") @[Simple.scala 55:31]
          vecCtrl.lsrc[3] <= UInt<1>("h0") @[Simple.scala 56:31]
          node _vecCtrl_ldest_T = bits(io.instr, 11, 7) @[Simple.scala 57:40]
          vecCtrl.ldest <= _vecCtrl_ldest_T @[Simple.scala 57:29]
          vecCtrl.fuType <= UInt<5>("h18") @[Simple.scala 58:30]
          vecCtrl.fuOpType <= UInt<7>("hf") @[Simple.scala 59:32]
          vecCtrl.rfWen <= UInt<1>("h0") @[Simple.scala 60:29]
          vecCtrl.fpWen <= UInt<1>("h0") @[Simple.scala 61:29]
          vecCtrl.vecWen <= UInt<1>("h1") @[Simple.scala 62:30]
          vecCtrl.mWen <= UInt<1>("h0") @[Simple.scala 63:28]
          vecCtrl.vxsatWen <= UInt<1>("h0") @[Simple.scala 64:32]
          vecCtrl.isXSTrap <= UInt<1>("h0") @[Simple.scala 65:32]
          vecCtrl.noSpecExec <= UInt<1>("h0") @[Simple.scala 66:34]
          vecCtrl.blockBackward <= UInt<1>("h0") @[Simple.scala 67:37]
          vecCtrl.flushPipe <= UInt<1>("h0") @[Simple.scala 68:33]
          vecCtrl.selImm <= UInt<1>("h0") @[Simple.scala 69:30]
          node vecCtrl_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrl_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrl_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrl_imm_minBits_1 = cat(_vecCtrl_imm_minBits_T, _vecCtrl_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrl_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrl_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrl_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrl_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrl_imm_minBits_lo = cat(_vecCtrl_imm_minBits_T_4, _vecCtrl_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi = cat(_vecCtrl_imm_minBits_T_2, _vecCtrl_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_2 = cat(vecCtrl_imm_minBits_hi, vecCtrl_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrl_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrl_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrl_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrl_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrl_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrl_imm_minBits_lo_1 = cat(_vecCtrl_imm_minBits_T_9, _vecCtrl_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi_hi = cat(_vecCtrl_imm_minBits_T_6, _vecCtrl_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi_1 = cat(vecCtrl_imm_minBits_hi_hi, _vecCtrl_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_4 = cat(vecCtrl_imm_minBits_hi_1, vecCtrl_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrl_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrl_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrl_imm_minBits_5 = cat(_vecCtrl_imm_minBits_T_11, _vecCtrl_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrl_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrl_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrl_imm_T = eq(UInt<3>("h4"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_1 = eq(UInt<1>("h0"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_2 = eq(UInt<1>("h1"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_3 = eq(UInt<2>("h2"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_4 = eq(UInt<2>("h3"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_5 = eq(UInt<3>("h5"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_6 = eq(UInt<4>("h8"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_7 = eq(UInt<4>("h9"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_8 = eq(UInt<4>("ha"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_9 = mux(_vecCtrl_imm_T, vecCtrl_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_10 = mux(_vecCtrl_imm_T_1, vecCtrl_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_11 = mux(_vecCtrl_imm_T_2, vecCtrl_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_12 = mux(_vecCtrl_imm_T_3, vecCtrl_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_13 = mux(_vecCtrl_imm_T_4, vecCtrl_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_14 = mux(_vecCtrl_imm_T_5, vecCtrl_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_15 = mux(_vecCtrl_imm_T_6, vecCtrl_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_16 = mux(_vecCtrl_imm_T_7, vecCtrl_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_17 = mux(_vecCtrl_imm_T_8, vecCtrl_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_18 = or(_vecCtrl_imm_T_9, _vecCtrl_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_19 = or(_vecCtrl_imm_T_18, _vecCtrl_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_20 = or(_vecCtrl_imm_T_19, _vecCtrl_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_21 = or(_vecCtrl_imm_T_20, _vecCtrl_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_22 = or(_vecCtrl_imm_T_21, _vecCtrl_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_23 = or(_vecCtrl_imm_T_22, _vecCtrl_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_24 = or(_vecCtrl_imm_T_23, _vecCtrl_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_25 = or(_vecCtrl_imm_T_24, _vecCtrl_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrl_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrl_imm_WIRE <= _vecCtrl_imm_T_25 @[Mux.scala 27:73]
          vecCtrl.imm <= _vecCtrl_imm_WIRE @[Simple.scala 70:27]
          vecCtrl.commitType <= UInt<1>("h0") @[Simple.scala 77:34]
          vecCtrl.isMove <= UInt<1>("h0") @[Simple.scala 78:30]
          vecCtrl.singleStep <= UInt<1>("h0") @[Simple.scala 79:34]
          vecCtrl.replayInst <= UInt<1>("h0") @[Simple.scala 80:34]
    reg ctrlReg : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}, clock with :
      reset => (UInt<1>("h0"), ctrlReg) @[Simple.scala 92:24]
    ctrlReg <= vecCtrl @[Simple.scala 92:24]
    io.vecCtrl <= ctrlReg @[Simple.scala 94:14]

  module Simple_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip instr : UInt<32>, vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}}

    wire vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>} @[Simple.scala 13:21]
    vecCtrl.srcType[0] <= UInt<1>("h0") @[Simple.scala 15:22]
    vecCtrl.srcType[1] <= UInt<1>("h0") @[Simple.scala 16:22]
    vecCtrl.srcType[2] <= UInt<1>("h0") @[Simple.scala 17:22]
    vecCtrl.srcType[3] <= UInt<1>("h0") @[Simple.scala 18:22]
    vecCtrl.lsrc[0] <= UInt<1>("h0") @[Simple.scala 19:19]
    vecCtrl.lsrc[1] <= UInt<1>("h0") @[Simple.scala 20:19]
    vecCtrl.lsrc[2] <= UInt<1>("h0") @[Simple.scala 21:19]
    vecCtrl.lsrc[3] <= UInt<1>("h0") @[Simple.scala 22:19]
    vecCtrl.ldest <= UInt<1>("h0") @[Simple.scala 23:17]
    vecCtrl.fuType <= UInt<1>("h0") @[Simple.scala 24:18]
    vecCtrl.fuOpType <= UInt<1>("h0") @[Simple.scala 25:20]
    vecCtrl.rfWen <= UInt<1>("h0") @[Simple.scala 26:17]
    vecCtrl.fpWen <= UInt<1>("h0") @[Simple.scala 27:17]
    vecCtrl.vecWen <= UInt<1>("h0") @[Simple.scala 28:18]
    vecCtrl.mWen <= UInt<1>("h0") @[Simple.scala 29:16]
    vecCtrl.vxsatWen <= UInt<1>("h0") @[Simple.scala 30:20]
    vecCtrl.isXSTrap <= UInt<1>("h0") @[Simple.scala 31:20]
    vecCtrl.noSpecExec <= UInt<1>("h0") @[Simple.scala 32:22]
    vecCtrl.blockBackward <= UInt<1>("h0") @[Simple.scala 33:25]
    vecCtrl.flushPipe <= UInt<1>("h0") @[Simple.scala 34:21]
    vecCtrl.selImm <= UInt<1>("h0") @[Simple.scala 35:18]
    vecCtrl.imm <= UInt<1>("h0") @[Simple.scala 36:15]
    vecCtrl.commitType <= UInt<1>("h0") @[Simple.scala 37:22]
    vecCtrl.isMove <= UInt<1>("h0") @[Simple.scala 38:18]
    vecCtrl.singleStep <= UInt<1>("h0") @[Simple.scala 39:22]
    vecCtrl.replayInst <= UInt<1>("h0") @[Simple.scala 40:22]
    node _T = bits(io.instr, 6, 0) @[Simple.scala 42:18]
    node _T_1 = eq(UInt<7>("h57"), _T) @[Simple.scala 42:26]
    when _T_1 : @[Simple.scala 42:26]
      node _T_2 = bits(io.instr, 14, 12) @[Simple.scala 44:22]
      node _T_3 = eq(UInt<1>("h0"), _T_2) @[Simple.scala 44:32]
      when _T_3 : @[Simple.scala 44:32]
        node _T_4 = bits(io.instr, 31, 26) @[Simple.scala 46:26]
        node _T_5 = eq(UInt<1>("h0"), _T_4) @[Simple.scala 46:36]
        when _T_5 : @[Simple.scala 46:36]
          vecCtrl.srcType[0] <= UInt<3>("h4") @[Simple.scala 49:34]
          vecCtrl.srcType[1] <= UInt<3>("h4") @[Simple.scala 50:34]
          vecCtrl.srcType[2] <= UInt<1>("h0") @[Simple.scala 51:34]
          vecCtrl.srcType[3] <= UInt<1>("h0") @[Simple.scala 52:34]
          node _vecCtrl_lsrc_0_T = bits(io.instr, 19, 15) @[Simple.scala 53:42]
          vecCtrl.lsrc[0] <= _vecCtrl_lsrc_0_T @[Simple.scala 53:31]
          node _vecCtrl_lsrc_1_T = bits(io.instr, 24, 20) @[Simple.scala 54:42]
          vecCtrl.lsrc[1] <= _vecCtrl_lsrc_1_T @[Simple.scala 54:31]
          vecCtrl.lsrc[2] <= UInt<1>("h0") @[Simple.scala 55:31]
          vecCtrl.lsrc[3] <= UInt<1>("h0") @[Simple.scala 56:31]
          node _vecCtrl_ldest_T = bits(io.instr, 11, 7) @[Simple.scala 57:40]
          vecCtrl.ldest <= _vecCtrl_ldest_T @[Simple.scala 57:29]
          vecCtrl.fuType <= UInt<5>("h18") @[Simple.scala 58:30]
          vecCtrl.fuOpType <= UInt<7>("hf") @[Simple.scala 59:32]
          vecCtrl.rfWen <= UInt<1>("h0") @[Simple.scala 60:29]
          vecCtrl.fpWen <= UInt<1>("h0") @[Simple.scala 61:29]
          vecCtrl.vecWen <= UInt<1>("h1") @[Simple.scala 62:30]
          vecCtrl.mWen <= UInt<1>("h0") @[Simple.scala 63:28]
          vecCtrl.vxsatWen <= UInt<1>("h0") @[Simple.scala 64:32]
          vecCtrl.isXSTrap <= UInt<1>("h0") @[Simple.scala 65:32]
          vecCtrl.noSpecExec <= UInt<1>("h0") @[Simple.scala 66:34]
          vecCtrl.blockBackward <= UInt<1>("h0") @[Simple.scala 67:37]
          vecCtrl.flushPipe <= UInt<1>("h0") @[Simple.scala 68:33]
          vecCtrl.selImm <= UInt<1>("h0") @[Simple.scala 69:30]
          node vecCtrl_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrl_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrl_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrl_imm_minBits_1 = cat(_vecCtrl_imm_minBits_T, _vecCtrl_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrl_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrl_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrl_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrl_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrl_imm_minBits_lo = cat(_vecCtrl_imm_minBits_T_4, _vecCtrl_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi = cat(_vecCtrl_imm_minBits_T_2, _vecCtrl_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_2 = cat(vecCtrl_imm_minBits_hi, vecCtrl_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrl_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrl_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrl_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrl_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrl_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrl_imm_minBits_lo_1 = cat(_vecCtrl_imm_minBits_T_9, _vecCtrl_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi_hi = cat(_vecCtrl_imm_minBits_T_6, _vecCtrl_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi_1 = cat(vecCtrl_imm_minBits_hi_hi, _vecCtrl_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_4 = cat(vecCtrl_imm_minBits_hi_1, vecCtrl_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrl_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrl_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrl_imm_minBits_5 = cat(_vecCtrl_imm_minBits_T_11, _vecCtrl_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrl_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrl_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrl_imm_T = eq(UInt<3>("h4"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_1 = eq(UInt<1>("h0"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_2 = eq(UInt<1>("h1"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_3 = eq(UInt<2>("h2"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_4 = eq(UInt<2>("h3"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_5 = eq(UInt<3>("h5"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_6 = eq(UInt<4>("h8"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_7 = eq(UInt<4>("h9"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_8 = eq(UInt<4>("ha"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_9 = mux(_vecCtrl_imm_T, vecCtrl_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_10 = mux(_vecCtrl_imm_T_1, vecCtrl_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_11 = mux(_vecCtrl_imm_T_2, vecCtrl_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_12 = mux(_vecCtrl_imm_T_3, vecCtrl_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_13 = mux(_vecCtrl_imm_T_4, vecCtrl_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_14 = mux(_vecCtrl_imm_T_5, vecCtrl_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_15 = mux(_vecCtrl_imm_T_6, vecCtrl_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_16 = mux(_vecCtrl_imm_T_7, vecCtrl_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_17 = mux(_vecCtrl_imm_T_8, vecCtrl_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_18 = or(_vecCtrl_imm_T_9, _vecCtrl_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_19 = or(_vecCtrl_imm_T_18, _vecCtrl_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_20 = or(_vecCtrl_imm_T_19, _vecCtrl_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_21 = or(_vecCtrl_imm_T_20, _vecCtrl_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_22 = or(_vecCtrl_imm_T_21, _vecCtrl_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_23 = or(_vecCtrl_imm_T_22, _vecCtrl_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_24 = or(_vecCtrl_imm_T_23, _vecCtrl_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_25 = or(_vecCtrl_imm_T_24, _vecCtrl_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrl_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrl_imm_WIRE <= _vecCtrl_imm_T_25 @[Mux.scala 27:73]
          vecCtrl.imm <= _vecCtrl_imm_WIRE @[Simple.scala 70:27]
          vecCtrl.commitType <= UInt<1>("h0") @[Simple.scala 77:34]
          vecCtrl.isMove <= UInt<1>("h0") @[Simple.scala 78:30]
          vecCtrl.singleStep <= UInt<1>("h0") @[Simple.scala 79:34]
          vecCtrl.replayInst <= UInt<1>("h0") @[Simple.scala 80:34]
    reg ctrlReg : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}, clock with :
      reset => (UInt<1>("h0"), ctrlReg) @[Simple.scala 92:24]
    ctrlReg <= vecCtrl @[Simple.scala 92:24]
    io.vecCtrl <= ctrlReg @[Simple.scala 94:14]

  module Simple_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip instr : UInt<32>, vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}}

    wire vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>} @[Simple.scala 13:21]
    vecCtrl.srcType[0] <= UInt<1>("h0") @[Simple.scala 15:22]
    vecCtrl.srcType[1] <= UInt<1>("h0") @[Simple.scala 16:22]
    vecCtrl.srcType[2] <= UInt<1>("h0") @[Simple.scala 17:22]
    vecCtrl.srcType[3] <= UInt<1>("h0") @[Simple.scala 18:22]
    vecCtrl.lsrc[0] <= UInt<1>("h0") @[Simple.scala 19:19]
    vecCtrl.lsrc[1] <= UInt<1>("h0") @[Simple.scala 20:19]
    vecCtrl.lsrc[2] <= UInt<1>("h0") @[Simple.scala 21:19]
    vecCtrl.lsrc[3] <= UInt<1>("h0") @[Simple.scala 22:19]
    vecCtrl.ldest <= UInt<1>("h0") @[Simple.scala 23:17]
    vecCtrl.fuType <= UInt<1>("h0") @[Simple.scala 24:18]
    vecCtrl.fuOpType <= UInt<1>("h0") @[Simple.scala 25:20]
    vecCtrl.rfWen <= UInt<1>("h0") @[Simple.scala 26:17]
    vecCtrl.fpWen <= UInt<1>("h0") @[Simple.scala 27:17]
    vecCtrl.vecWen <= UInt<1>("h0") @[Simple.scala 28:18]
    vecCtrl.mWen <= UInt<1>("h0") @[Simple.scala 29:16]
    vecCtrl.vxsatWen <= UInt<1>("h0") @[Simple.scala 30:20]
    vecCtrl.isXSTrap <= UInt<1>("h0") @[Simple.scala 31:20]
    vecCtrl.noSpecExec <= UInt<1>("h0") @[Simple.scala 32:22]
    vecCtrl.blockBackward <= UInt<1>("h0") @[Simple.scala 33:25]
    vecCtrl.flushPipe <= UInt<1>("h0") @[Simple.scala 34:21]
    vecCtrl.selImm <= UInt<1>("h0") @[Simple.scala 35:18]
    vecCtrl.imm <= UInt<1>("h0") @[Simple.scala 36:15]
    vecCtrl.commitType <= UInt<1>("h0") @[Simple.scala 37:22]
    vecCtrl.isMove <= UInt<1>("h0") @[Simple.scala 38:18]
    vecCtrl.singleStep <= UInt<1>("h0") @[Simple.scala 39:22]
    vecCtrl.replayInst <= UInt<1>("h0") @[Simple.scala 40:22]
    node _T = bits(io.instr, 6, 0) @[Simple.scala 42:18]
    node _T_1 = eq(UInt<7>("h57"), _T) @[Simple.scala 42:26]
    when _T_1 : @[Simple.scala 42:26]
      node _T_2 = bits(io.instr, 14, 12) @[Simple.scala 44:22]
      node _T_3 = eq(UInt<1>("h0"), _T_2) @[Simple.scala 44:32]
      when _T_3 : @[Simple.scala 44:32]
        node _T_4 = bits(io.instr, 31, 26) @[Simple.scala 46:26]
        node _T_5 = eq(UInt<1>("h0"), _T_4) @[Simple.scala 46:36]
        when _T_5 : @[Simple.scala 46:36]
          vecCtrl.srcType[0] <= UInt<3>("h4") @[Simple.scala 49:34]
          vecCtrl.srcType[1] <= UInt<3>("h4") @[Simple.scala 50:34]
          vecCtrl.srcType[2] <= UInt<1>("h0") @[Simple.scala 51:34]
          vecCtrl.srcType[3] <= UInt<1>("h0") @[Simple.scala 52:34]
          node _vecCtrl_lsrc_0_T = bits(io.instr, 19, 15) @[Simple.scala 53:42]
          vecCtrl.lsrc[0] <= _vecCtrl_lsrc_0_T @[Simple.scala 53:31]
          node _vecCtrl_lsrc_1_T = bits(io.instr, 24, 20) @[Simple.scala 54:42]
          vecCtrl.lsrc[1] <= _vecCtrl_lsrc_1_T @[Simple.scala 54:31]
          vecCtrl.lsrc[2] <= UInt<1>("h0") @[Simple.scala 55:31]
          vecCtrl.lsrc[3] <= UInt<1>("h0") @[Simple.scala 56:31]
          node _vecCtrl_ldest_T = bits(io.instr, 11, 7) @[Simple.scala 57:40]
          vecCtrl.ldest <= _vecCtrl_ldest_T @[Simple.scala 57:29]
          vecCtrl.fuType <= UInt<5>("h18") @[Simple.scala 58:30]
          vecCtrl.fuOpType <= UInt<7>("hf") @[Simple.scala 59:32]
          vecCtrl.rfWen <= UInt<1>("h0") @[Simple.scala 60:29]
          vecCtrl.fpWen <= UInt<1>("h0") @[Simple.scala 61:29]
          vecCtrl.vecWen <= UInt<1>("h1") @[Simple.scala 62:30]
          vecCtrl.mWen <= UInt<1>("h0") @[Simple.scala 63:28]
          vecCtrl.vxsatWen <= UInt<1>("h0") @[Simple.scala 64:32]
          vecCtrl.isXSTrap <= UInt<1>("h0") @[Simple.scala 65:32]
          vecCtrl.noSpecExec <= UInt<1>("h0") @[Simple.scala 66:34]
          vecCtrl.blockBackward <= UInt<1>("h0") @[Simple.scala 67:37]
          vecCtrl.flushPipe <= UInt<1>("h0") @[Simple.scala 68:33]
          vecCtrl.selImm <= UInt<1>("h0") @[Simple.scala 69:30]
          node vecCtrl_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrl_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrl_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrl_imm_minBits_1 = cat(_vecCtrl_imm_minBits_T, _vecCtrl_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrl_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrl_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrl_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrl_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrl_imm_minBits_lo = cat(_vecCtrl_imm_minBits_T_4, _vecCtrl_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi = cat(_vecCtrl_imm_minBits_T_2, _vecCtrl_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_2 = cat(vecCtrl_imm_minBits_hi, vecCtrl_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrl_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrl_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrl_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrl_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrl_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrl_imm_minBits_lo_1 = cat(_vecCtrl_imm_minBits_T_9, _vecCtrl_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi_hi = cat(_vecCtrl_imm_minBits_T_6, _vecCtrl_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi_1 = cat(vecCtrl_imm_minBits_hi_hi, _vecCtrl_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_4 = cat(vecCtrl_imm_minBits_hi_1, vecCtrl_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrl_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrl_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrl_imm_minBits_5 = cat(_vecCtrl_imm_minBits_T_11, _vecCtrl_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrl_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrl_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrl_imm_T = eq(UInt<3>("h4"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_1 = eq(UInt<1>("h0"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_2 = eq(UInt<1>("h1"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_3 = eq(UInt<2>("h2"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_4 = eq(UInt<2>("h3"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_5 = eq(UInt<3>("h5"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_6 = eq(UInt<4>("h8"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_7 = eq(UInt<4>("h9"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_8 = eq(UInt<4>("ha"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_9 = mux(_vecCtrl_imm_T, vecCtrl_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_10 = mux(_vecCtrl_imm_T_1, vecCtrl_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_11 = mux(_vecCtrl_imm_T_2, vecCtrl_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_12 = mux(_vecCtrl_imm_T_3, vecCtrl_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_13 = mux(_vecCtrl_imm_T_4, vecCtrl_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_14 = mux(_vecCtrl_imm_T_5, vecCtrl_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_15 = mux(_vecCtrl_imm_T_6, vecCtrl_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_16 = mux(_vecCtrl_imm_T_7, vecCtrl_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_17 = mux(_vecCtrl_imm_T_8, vecCtrl_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_18 = or(_vecCtrl_imm_T_9, _vecCtrl_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_19 = or(_vecCtrl_imm_T_18, _vecCtrl_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_20 = or(_vecCtrl_imm_T_19, _vecCtrl_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_21 = or(_vecCtrl_imm_T_20, _vecCtrl_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_22 = or(_vecCtrl_imm_T_21, _vecCtrl_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_23 = or(_vecCtrl_imm_T_22, _vecCtrl_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_24 = or(_vecCtrl_imm_T_23, _vecCtrl_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_25 = or(_vecCtrl_imm_T_24, _vecCtrl_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrl_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrl_imm_WIRE <= _vecCtrl_imm_T_25 @[Mux.scala 27:73]
          vecCtrl.imm <= _vecCtrl_imm_WIRE @[Simple.scala 70:27]
          vecCtrl.commitType <= UInt<1>("h0") @[Simple.scala 77:34]
          vecCtrl.isMove <= UInt<1>("h0") @[Simple.scala 78:30]
          vecCtrl.singleStep <= UInt<1>("h0") @[Simple.scala 79:34]
          vecCtrl.replayInst <= UInt<1>("h0") @[Simple.scala 80:34]
    reg ctrlReg : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}, clock with :
      reset => (UInt<1>("h0"), ctrlReg) @[Simple.scala 92:24]
    ctrlReg <= vecCtrl @[Simple.scala 92:24]
    io.vecCtrl <= ctrlReg @[Simple.scala 94:14]

  module Simple_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip instr : UInt<32>, vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}}

    wire vecCtrl : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>} @[Simple.scala 13:21]
    vecCtrl.srcType[0] <= UInt<1>("h0") @[Simple.scala 15:22]
    vecCtrl.srcType[1] <= UInt<1>("h0") @[Simple.scala 16:22]
    vecCtrl.srcType[2] <= UInt<1>("h0") @[Simple.scala 17:22]
    vecCtrl.srcType[3] <= UInt<1>("h0") @[Simple.scala 18:22]
    vecCtrl.lsrc[0] <= UInt<1>("h0") @[Simple.scala 19:19]
    vecCtrl.lsrc[1] <= UInt<1>("h0") @[Simple.scala 20:19]
    vecCtrl.lsrc[2] <= UInt<1>("h0") @[Simple.scala 21:19]
    vecCtrl.lsrc[3] <= UInt<1>("h0") @[Simple.scala 22:19]
    vecCtrl.ldest <= UInt<1>("h0") @[Simple.scala 23:17]
    vecCtrl.fuType <= UInt<1>("h0") @[Simple.scala 24:18]
    vecCtrl.fuOpType <= UInt<1>("h0") @[Simple.scala 25:20]
    vecCtrl.rfWen <= UInt<1>("h0") @[Simple.scala 26:17]
    vecCtrl.fpWen <= UInt<1>("h0") @[Simple.scala 27:17]
    vecCtrl.vecWen <= UInt<1>("h0") @[Simple.scala 28:18]
    vecCtrl.mWen <= UInt<1>("h0") @[Simple.scala 29:16]
    vecCtrl.vxsatWen <= UInt<1>("h0") @[Simple.scala 30:20]
    vecCtrl.isXSTrap <= UInt<1>("h0") @[Simple.scala 31:20]
    vecCtrl.noSpecExec <= UInt<1>("h0") @[Simple.scala 32:22]
    vecCtrl.blockBackward <= UInt<1>("h0") @[Simple.scala 33:25]
    vecCtrl.flushPipe <= UInt<1>("h0") @[Simple.scala 34:21]
    vecCtrl.selImm <= UInt<1>("h0") @[Simple.scala 35:18]
    vecCtrl.imm <= UInt<1>("h0") @[Simple.scala 36:15]
    vecCtrl.commitType <= UInt<1>("h0") @[Simple.scala 37:22]
    vecCtrl.isMove <= UInt<1>("h0") @[Simple.scala 38:18]
    vecCtrl.singleStep <= UInt<1>("h0") @[Simple.scala 39:22]
    vecCtrl.replayInst <= UInt<1>("h0") @[Simple.scala 40:22]
    node _T = bits(io.instr, 6, 0) @[Simple.scala 42:18]
    node _T_1 = eq(UInt<7>("h57"), _T) @[Simple.scala 42:26]
    when _T_1 : @[Simple.scala 42:26]
      node _T_2 = bits(io.instr, 14, 12) @[Simple.scala 44:22]
      node _T_3 = eq(UInt<1>("h0"), _T_2) @[Simple.scala 44:32]
      when _T_3 : @[Simple.scala 44:32]
        node _T_4 = bits(io.instr, 31, 26) @[Simple.scala 46:26]
        node _T_5 = eq(UInt<1>("h0"), _T_4) @[Simple.scala 46:36]
        when _T_5 : @[Simple.scala 46:36]
          vecCtrl.srcType[0] <= UInt<3>("h4") @[Simple.scala 49:34]
          vecCtrl.srcType[1] <= UInt<3>("h4") @[Simple.scala 50:34]
          vecCtrl.srcType[2] <= UInt<1>("h0") @[Simple.scala 51:34]
          vecCtrl.srcType[3] <= UInt<1>("h0") @[Simple.scala 52:34]
          node _vecCtrl_lsrc_0_T = bits(io.instr, 19, 15) @[Simple.scala 53:42]
          vecCtrl.lsrc[0] <= _vecCtrl_lsrc_0_T @[Simple.scala 53:31]
          node _vecCtrl_lsrc_1_T = bits(io.instr, 24, 20) @[Simple.scala 54:42]
          vecCtrl.lsrc[1] <= _vecCtrl_lsrc_1_T @[Simple.scala 54:31]
          vecCtrl.lsrc[2] <= UInt<1>("h0") @[Simple.scala 55:31]
          vecCtrl.lsrc[3] <= UInt<1>("h0") @[Simple.scala 56:31]
          node _vecCtrl_ldest_T = bits(io.instr, 11, 7) @[Simple.scala 57:40]
          vecCtrl.ldest <= _vecCtrl_ldest_T @[Simple.scala 57:29]
          vecCtrl.fuType <= UInt<5>("h18") @[Simple.scala 58:30]
          vecCtrl.fuOpType <= UInt<7>("hf") @[Simple.scala 59:32]
          vecCtrl.rfWen <= UInt<1>("h0") @[Simple.scala 60:29]
          vecCtrl.fpWen <= UInt<1>("h0") @[Simple.scala 61:29]
          vecCtrl.vecWen <= UInt<1>("h1") @[Simple.scala 62:30]
          vecCtrl.mWen <= UInt<1>("h0") @[Simple.scala 63:28]
          vecCtrl.vxsatWen <= UInt<1>("h0") @[Simple.scala 64:32]
          vecCtrl.isXSTrap <= UInt<1>("h0") @[Simple.scala 65:32]
          vecCtrl.noSpecExec <= UInt<1>("h0") @[Simple.scala 66:34]
          vecCtrl.blockBackward <= UInt<1>("h0") @[Simple.scala 67:37]
          vecCtrl.flushPipe <= UInt<1>("h0") @[Simple.scala 68:33]
          vecCtrl.selImm <= UInt<1>("h0") @[Simple.scala 69:30]
          node vecCtrl_imm_minBits = bits(io.instr, 31, 20) @[Bundle.scala 213:14]
          node _vecCtrl_imm_minBits_T = bits(io.instr, 31, 25) @[Bundle.scala 220:14]
          node _vecCtrl_imm_minBits_T_1 = bits(io.instr, 11, 7) @[Bundle.scala 220:29]
          node vecCtrl_imm_minBits_1 = cat(_vecCtrl_imm_minBits_T, _vecCtrl_imm_minBits_T_1) @[Cat.scala 33:92]
          node _vecCtrl_imm_minBits_T_2 = bits(io.instr, 31, 31) @[Bundle.scala 227:14]
          node _vecCtrl_imm_minBits_T_3 = bits(io.instr, 7, 7) @[Bundle.scala 227:25]
          node _vecCtrl_imm_minBits_T_4 = bits(io.instr, 30, 25) @[Bundle.scala 227:35]
          node _vecCtrl_imm_minBits_T_5 = bits(io.instr, 11, 8) @[Bundle.scala 227:50]
          node vecCtrl_imm_minBits_lo = cat(_vecCtrl_imm_minBits_T_4, _vecCtrl_imm_minBits_T_5) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi = cat(_vecCtrl_imm_minBits_T_2, _vecCtrl_imm_minBits_T_3) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_2 = cat(vecCtrl_imm_minBits_hi, vecCtrl_imm_minBits_lo) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_3 = bits(io.instr, 31, 12) @[Bundle.scala 234:10]
          node _vecCtrl_imm_minBits_T_6 = bits(io.instr, 31, 31) @[Bundle.scala 242:14]
          node _vecCtrl_imm_minBits_T_7 = bits(io.instr, 19, 12) @[Bundle.scala 242:25]
          node _vecCtrl_imm_minBits_T_8 = bits(io.instr, 20, 20) @[Bundle.scala 242:40]
          node _vecCtrl_imm_minBits_T_9 = bits(io.instr, 30, 25) @[Bundle.scala 242:51]
          node _vecCtrl_imm_minBits_T_10 = bits(io.instr, 24, 21) @[Bundle.scala 242:66]
          node vecCtrl_imm_minBits_lo_1 = cat(_vecCtrl_imm_minBits_T_9, _vecCtrl_imm_minBits_T_10) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi_hi = cat(_vecCtrl_imm_minBits_T_6, _vecCtrl_imm_minBits_T_7) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_hi_1 = cat(vecCtrl_imm_minBits_hi_hi, _vecCtrl_imm_minBits_T_8) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_4 = cat(vecCtrl_imm_minBits_hi_1, vecCtrl_imm_minBits_lo_1) @[Cat.scala 33:92]
          node _vecCtrl_imm_minBits_T_11 = bits(io.instr, 19, 15) @[Bundle.scala 250:14]
          node _vecCtrl_imm_minBits_T_12 = bits(io.instr, 31, 20) @[Bundle.scala 250:29]
          node vecCtrl_imm_minBits_5 = cat(_vecCtrl_imm_minBits_T_11, _vecCtrl_imm_minBits_T_12) @[Cat.scala 33:92]
          node vecCtrl_imm_minBits_6 = bits(io.instr, 25, 20) @[Bundle.scala 258:10]
          node vecCtrl_imm_minBits_7 = bits(io.instr, 19, 15) @[Bundle.scala 266:10]
          node vecCtrl_imm_minBits_8 = bits(io.instr, 19, 15) @[Bundle.scala 273:10]
          node _vecCtrl_imm_T = eq(UInt<3>("h4"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_1 = eq(UInt<1>("h0"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_2 = eq(UInt<1>("h1"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_3 = eq(UInt<2>("h2"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_4 = eq(UInt<2>("h3"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_5 = eq(UInt<3>("h5"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_6 = eq(UInt<4>("h8"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_7 = eq(UInt<4>("h9"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_8 = eq(UInt<4>("ha"), vecCtrl.selImm) @[Bundle.scala 327:34]
          node _vecCtrl_imm_T_9 = mux(_vecCtrl_imm_T, vecCtrl_imm_minBits, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_10 = mux(_vecCtrl_imm_T_1, vecCtrl_imm_minBits_1, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_11 = mux(_vecCtrl_imm_T_2, vecCtrl_imm_minBits_2, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_12 = mux(_vecCtrl_imm_T_3, vecCtrl_imm_minBits_3, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_13 = mux(_vecCtrl_imm_T_4, vecCtrl_imm_minBits_4, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_14 = mux(_vecCtrl_imm_T_5, vecCtrl_imm_minBits_5, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_15 = mux(_vecCtrl_imm_T_6, vecCtrl_imm_minBits_6, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_16 = mux(_vecCtrl_imm_T_7, vecCtrl_imm_minBits_7, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_17 = mux(_vecCtrl_imm_T_8, vecCtrl_imm_minBits_8, UInt<1>("h0")) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_18 = or(_vecCtrl_imm_T_9, _vecCtrl_imm_T_10) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_19 = or(_vecCtrl_imm_T_18, _vecCtrl_imm_T_11) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_20 = or(_vecCtrl_imm_T_19, _vecCtrl_imm_T_12) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_21 = or(_vecCtrl_imm_T_20, _vecCtrl_imm_T_13) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_22 = or(_vecCtrl_imm_T_21, _vecCtrl_imm_T_14) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_23 = or(_vecCtrl_imm_T_22, _vecCtrl_imm_T_15) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_24 = or(_vecCtrl_imm_T_23, _vecCtrl_imm_T_16) @[Mux.scala 27:73]
          node _vecCtrl_imm_T_25 = or(_vecCtrl_imm_T_24, _vecCtrl_imm_T_17) @[Mux.scala 27:73]
          wire _vecCtrl_imm_WIRE : UInt<20> @[Mux.scala 27:73]
          _vecCtrl_imm_WIRE <= _vecCtrl_imm_T_25 @[Mux.scala 27:73]
          vecCtrl.imm <= _vecCtrl_imm_WIRE @[Simple.scala 70:27]
          vecCtrl.commitType <= UInt<1>("h0") @[Simple.scala 77:34]
          vecCtrl.isMove <= UInt<1>("h0") @[Simple.scala 78:30]
          vecCtrl.singleStep <= UInt<1>("h0") @[Simple.scala 79:34]
          vecCtrl.replayInst <= UInt<1>("h0") @[Simple.scala 80:34]
    reg ctrlReg : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}, clock with :
      reset => (UInt<1>("h0"), ctrlReg) @[Simple.scala 92:24]
    ctrlReg <= vecCtrl @[Simple.scala 92:24]
    io.vecCtrl <= ctrlReg @[Simple.scala 94:14]

  module VectorDiv :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip instr : UInt<32>[6], flip vlmul : UInt<3>[6], outCtrlSignals : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}[6], valid : UInt<1>[6], strIndex : UInt<3>}

    inst decoder0 of Complex @[VectorDiv.scala 17:24]
    decoder0.clock <= clock
    decoder0.reset <= reset
    inst decoders_0 of Simple @[VectorDiv.scala 18:36]
    decoders_0.clock <= clock
    decoders_0.reset <= reset
    inst decoders_1 of Simple_1 @[VectorDiv.scala 18:36]
    decoders_1.clock <= clock
    decoders_1.reset <= reset
    inst decoders_2 of Simple_2 @[VectorDiv.scala 18:36]
    decoders_2.clock <= clock
    decoders_2.reset <= reset
    inst decoders_3 of Simple_3 @[VectorDiv.scala 18:36]
    decoders_3.clock <= clock
    decoders_3.reset <= reset
    inst decoders_4 of Simple_4 @[VectorDiv.scala 18:36]
    decoders_4.clock <= clock
    decoders_4.reset <= reset
    wire isComplex : UInt<1>[6] @[VectorDiv.scala 20:23]
    wire ctrlComplex : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}[6] @[VectorDiv.scala 21:25]
    wire num : UInt<3> @[VectorDiv.scala 22:17]
    wire offset : UInt<6> @[VectorDiv.scala 23:20]
    wire ctrlSimple : { srcType : UInt<3>[4], lsrc : UInt<6>[4], ldest : UInt<6>, fuType : UInt<5>, fuOpType : UInt<8>, rfWen : UInt<1>, fpWen : UInt<1>, vecWen : UInt<1>, mWen : UInt<1>, vxsatWen : UInt<1>, isXSTrap : UInt<1>, noSpecExec : UInt<1>, blockBackward : UInt<1>, flushPipe : UInt<1>, selImm : UInt<4>, imm : UInt<20>, commitType : UInt<3>, isMove : UInt<1>, singleStep : UInt<1>, replayInst : UInt<1>}[5] @[VectorDiv.scala 25:24]
    decoder0.io.instr <= io.instr[0] @[VectorDiv.scala 27:21]
    decoder0.io.vlmul <= io.vlmul[0] @[VectorDiv.scala 28:21]
    decoder0.io.isComplex[0] <= isComplex[0] @[VectorDiv.scala 29:25]
    decoder0.io.isComplex[1] <= isComplex[1] @[VectorDiv.scala 29:25]
    decoder0.io.isComplex[2] <= isComplex[2] @[VectorDiv.scala 29:25]
    decoder0.io.isComplex[3] <= isComplex[3] @[VectorDiv.scala 29:25]
    decoder0.io.isComplex[4] <= isComplex[4] @[VectorDiv.scala 29:25]
    decoder0.io.isComplex[5] <= isComplex[5] @[VectorDiv.scala 29:25]
    ctrlComplex <= decoder0.io.vecCtrl @[VectorDiv.scala 30:15]
    num <= decoder0.io.num @[VectorDiv.scala 31:7]
    node offset_lo_hi = cat(decoder0.io.offset[2], decoder0.io.offset[1]) @[VectorDiv.scala 32:32]
    node offset_lo = cat(offset_lo_hi, decoder0.io.offset[0]) @[VectorDiv.scala 32:32]
    node offset_hi_hi = cat(decoder0.io.offset[5], decoder0.io.offset[4]) @[VectorDiv.scala 32:32]
    node offset_hi = cat(offset_hi_hi, decoder0.io.offset[3]) @[VectorDiv.scala 32:32]
    node _offset_T = cat(offset_hi, offset_lo) @[VectorDiv.scala 32:32]
    offset <= _offset_T @[VectorDiv.scala 32:10]
    io.strIndex <= decoder0.io.strIndex @[VectorDiv.scala 33:15]
    decoders_0.io.instr <= io.instr[1] @[VectorDiv.scala 35:26]
    ctrlSimple[0] <= decoders_0.io.vecCtrl @[VectorDiv.scala 36:19]
    decoders_1.io.instr <= io.instr[2] @[VectorDiv.scala 35:26]
    ctrlSimple[1] <= decoders_1.io.vecCtrl @[VectorDiv.scala 36:19]
    decoders_2.io.instr <= io.instr[3] @[VectorDiv.scala 35:26]
    ctrlSimple[2] <= decoders_2.io.vecCtrl @[VectorDiv.scala 36:19]
    decoders_3.io.instr <= io.instr[4] @[VectorDiv.scala 35:26]
    ctrlSimple[3] <= decoders_3.io.vecCtrl @[VectorDiv.scala 36:19]
    decoders_4.io.instr <= io.instr[5] @[VectorDiv.scala 35:26]
    ctrlSimple[4] <= decoders_4.io.vecCtrl @[VectorDiv.scala 36:19]
    node _T = eq(io.vlmul[0], UInt<1>("h1")) @[VectorDiv.scala 40:22]
    node _T_1 = eq(io.vlmul[0], UInt<2>("h2")) @[VectorDiv.scala 40:50]
    node _T_2 = or(_T, _T_1) @[VectorDiv.scala 40:35]
    node _T_3 = eq(io.vlmul[0], UInt<2>("h3")) @[VectorDiv.scala 40:78]
    node _T_4 = or(_T_2, _T_3) @[VectorDiv.scala 40:63]
    when _T_4 : @[VectorDiv.scala 40:92]
      isComplex[0] <= UInt<1>("h1") @[VectorDiv.scala 41:20]
    else :
      isComplex[0] <= UInt<1>("h0") @[VectorDiv.scala 43:20]
    node _T_5 = eq(io.vlmul[1], UInt<1>("h1")) @[VectorDiv.scala 40:22]
    node _T_6 = eq(io.vlmul[1], UInt<2>("h2")) @[VectorDiv.scala 40:50]
    node _T_7 = or(_T_5, _T_6) @[VectorDiv.scala 40:35]
    node _T_8 = eq(io.vlmul[1], UInt<2>("h3")) @[VectorDiv.scala 40:78]
    node _T_9 = or(_T_7, _T_8) @[VectorDiv.scala 40:63]
    when _T_9 : @[VectorDiv.scala 40:92]
      isComplex[1] <= UInt<1>("h1") @[VectorDiv.scala 41:20]
    else :
      isComplex[1] <= UInt<1>("h0") @[VectorDiv.scala 43:20]
    node _T_10 = eq(io.vlmul[2], UInt<1>("h1")) @[VectorDiv.scala 40:22]
    node _T_11 = eq(io.vlmul[2], UInt<2>("h2")) @[VectorDiv.scala 40:50]
    node _T_12 = or(_T_10, _T_11) @[VectorDiv.scala 40:35]
    node _T_13 = eq(io.vlmul[2], UInt<2>("h3")) @[VectorDiv.scala 40:78]
    node _T_14 = or(_T_12, _T_13) @[VectorDiv.scala 40:63]
    when _T_14 : @[VectorDiv.scala 40:92]
      isComplex[2] <= UInt<1>("h1") @[VectorDiv.scala 41:20]
    else :
      isComplex[2] <= UInt<1>("h0") @[VectorDiv.scala 43:20]
    node _T_15 = eq(io.vlmul[3], UInt<1>("h1")) @[VectorDiv.scala 40:22]
    node _T_16 = eq(io.vlmul[3], UInt<2>("h2")) @[VectorDiv.scala 40:50]
    node _T_17 = or(_T_15, _T_16) @[VectorDiv.scala 40:35]
    node _T_18 = eq(io.vlmul[3], UInt<2>("h3")) @[VectorDiv.scala 40:78]
    node _T_19 = or(_T_17, _T_18) @[VectorDiv.scala 40:63]
    when _T_19 : @[VectorDiv.scala 40:92]
      isComplex[3] <= UInt<1>("h1") @[VectorDiv.scala 41:20]
    else :
      isComplex[3] <= UInt<1>("h0") @[VectorDiv.scala 43:20]
    node _T_20 = eq(io.vlmul[4], UInt<1>("h1")) @[VectorDiv.scala 40:22]
    node _T_21 = eq(io.vlmul[4], UInt<2>("h2")) @[VectorDiv.scala 40:50]
    node _T_22 = or(_T_20, _T_21) @[VectorDiv.scala 40:35]
    node _T_23 = eq(io.vlmul[4], UInt<2>("h3")) @[VectorDiv.scala 40:78]
    node _T_24 = or(_T_22, _T_23) @[VectorDiv.scala 40:63]
    when _T_24 : @[VectorDiv.scala 40:92]
      isComplex[4] <= UInt<1>("h1") @[VectorDiv.scala 41:20]
    else :
      isComplex[4] <= UInt<1>("h0") @[VectorDiv.scala 43:20]
    node _T_25 = eq(io.vlmul[5], UInt<1>("h1")) @[VectorDiv.scala 40:22]
    node _T_26 = eq(io.vlmul[5], UInt<2>("h2")) @[VectorDiv.scala 40:50]
    node _T_27 = or(_T_25, _T_26) @[VectorDiv.scala 40:35]
    node _T_28 = eq(io.vlmul[5], UInt<2>("h3")) @[VectorDiv.scala 40:78]
    node _T_29 = or(_T_27, _T_28) @[VectorDiv.scala 40:63]
    when _T_29 : @[VectorDiv.scala 40:92]
      isComplex[5] <= UInt<1>("h1") @[VectorDiv.scala 41:20]
    else :
      isComplex[5] <= UInt<1>("h0") @[VectorDiv.scala 43:20]
    io.outCtrlSignals <= ctrlComplex @[VectorDiv.scala 47:21]
    io.valid[0] <= UInt<1>("h0") @[VectorDiv.scala 50:17]
    io.valid[1] <= UInt<1>("h0") @[VectorDiv.scala 50:17]
    io.valid[2] <= UInt<1>("h0") @[VectorDiv.scala 50:17]
    io.valid[3] <= UInt<1>("h0") @[VectorDiv.scala 50:17]
    io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 50:17]
    io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 50:17]
    node _T_30 = eq(UInt<1>("h0"), offset) @[VectorDiv.scala 54:18]
    when _T_30 : @[VectorDiv.scala 54:18]
      io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 56:28]
      io.outCtrlSignals[1] <= ctrlSimple[0] @[VectorDiv.scala 59:34]
      io.outCtrlSignals[2] <= ctrlSimple[1] @[VectorDiv.scala 59:34]
      io.outCtrlSignals[3] <= ctrlSimple[2] @[VectorDiv.scala 59:34]
      io.outCtrlSignals[4] <= ctrlSimple[3] @[VectorDiv.scala 59:34]
      io.outCtrlSignals[5] <= ctrlSimple[4] @[VectorDiv.scala 59:34]
      io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 65:21]
      io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 65:21]
      io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 65:21]
      io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 65:21]
      io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 65:21]
      io.valid[5] <= UInt<1>("h1") @[VectorDiv.scala 65:21]
    else :
      node _T_31 = eq(UInt<1>("h1"), offset) @[VectorDiv.scala 54:18]
      when _T_31 : @[VectorDiv.scala 54:18]
        io.outCtrlSignals <= ctrlComplex @[VectorDiv.scala 70:25]
        io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 75:21]
        io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 75:21]
        io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 75:21]
        io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 75:21]
        io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 75:21]
        io.valid[5] <= UInt<1>("h1") @[VectorDiv.scala 75:21]
      else :
        node _T_32 = eq(UInt<2>("h2"), offset) @[VectorDiv.scala 54:18]
        when _T_32 : @[VectorDiv.scala 54:18]
          node _T_33 = eq(UInt<1>("h1"), num) @[VectorDiv.scala 80:19]
          when _T_33 : @[VectorDiv.scala 80:19]
            io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 82:32]
            io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 86:25]
            io.valid[1] <= UInt<1>("h0") @[VectorDiv.scala 89:25]
            io.valid[2] <= UInt<1>("h0") @[VectorDiv.scala 89:25]
            io.valid[3] <= UInt<1>("h0") @[VectorDiv.scala 89:25]
            io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 89:25]
            io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 89:25]
          else :
            node _T_34 = eq(UInt<2>("h2"), num) @[VectorDiv.scala 80:19]
            when _T_34 : @[VectorDiv.scala 80:19]
              io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 94:34]
              io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 94:34]
              io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 99:25]
              io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 99:25]
              io.valid[2] <= UInt<1>("h0") @[VectorDiv.scala 102:25]
              io.valid[3] <= UInt<1>("h0") @[VectorDiv.scala 102:25]
              io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 102:25]
              io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 102:25]
            else :
              node _T_35 = eq(UInt<2>("h3"), num) @[VectorDiv.scala 80:19]
              when _T_35 : @[VectorDiv.scala 80:19]
                io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 107:34]
                io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 107:34]
                io.outCtrlSignals[2] <= ctrlComplex[2] @[VectorDiv.scala 107:34]
                io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 112:25]
                io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 112:25]
                io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 112:25]
                io.valid[3] <= UInt<1>("h0") @[VectorDiv.scala 115:25]
                io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 115:25]
                io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 115:25]
              else :
                node _T_36 = eq(UInt<3>("h4"), num) @[VectorDiv.scala 80:19]
                when _T_36 : @[VectorDiv.scala 80:19]
                  io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 120:34]
                  io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 120:34]
                  io.outCtrlSignals[2] <= ctrlComplex[2] @[VectorDiv.scala 120:34]
                  io.outCtrlSignals[3] <= ctrlComplex[3] @[VectorDiv.scala 120:34]
                  io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 125:25]
                  io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 125:25]
                  io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 125:25]
                  io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 125:25]
                  io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 128:25]
                  io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 128:25]
                else :
                  node _T_37 = eq(UInt<3>("h5"), num) @[VectorDiv.scala 80:19]
                  when _T_37 : @[VectorDiv.scala 80:19]
                    io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 133:34]
                    io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 133:34]
                    io.outCtrlSignals[2] <= ctrlComplex[2] @[VectorDiv.scala 133:34]
                    io.outCtrlSignals[3] <= ctrlComplex[3] @[VectorDiv.scala 133:34]
                    io.outCtrlSignals[4] <= ctrlComplex[4] @[VectorDiv.scala 133:34]
                    io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 138:25]
                    io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 138:25]
                    io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 138:25]
                    io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 138:25]
                    io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 138:25]
                    io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 141:25]
                  else :
                    node _T_38 = eq(UInt<3>("h6"), num) @[VectorDiv.scala 80:19]
                    when _T_38 : @[VectorDiv.scala 80:19]
                      io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 146:34]
                      io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 146:34]
                      io.outCtrlSignals[2] <= ctrlComplex[2] @[VectorDiv.scala 146:34]
                      io.outCtrlSignals[3] <= ctrlComplex[3] @[VectorDiv.scala 146:34]
                      io.outCtrlSignals[4] <= ctrlComplex[4] @[VectorDiv.scala 146:34]
                      io.outCtrlSignals[5] <= ctrlComplex[5] @[VectorDiv.scala 146:34]
                      io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 151:25]
                      io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 151:25]
                      io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 151:25]
                      io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 151:25]
                      io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 151:25]
                      io.valid[5] <= UInt<1>("h1") @[VectorDiv.scala 151:25]
        else :
          node _T_39 = eq(UInt<3>("h4"), offset) @[VectorDiv.scala 54:18]
          when _T_39 : @[VectorDiv.scala 54:18]
            node _T_40 = eq(UInt<1>("h1"), num) @[VectorDiv.scala 159:19]
            when _T_40 : @[VectorDiv.scala 159:19]
              io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 161:32]
              io.outCtrlSignals[1] <= ctrlSimple[0] @[VectorDiv.scala 163:32]
              io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 167:25]
              io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 167:25]
              io.valid[2] <= UInt<1>("h0") @[VectorDiv.scala 170:25]
              io.valid[3] <= UInt<1>("h0") @[VectorDiv.scala 170:25]
              io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 170:25]
              io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 170:25]
            else :
              node _T_41 = eq(UInt<2>("h2"), num) @[VectorDiv.scala 159:19]
              when _T_41 : @[VectorDiv.scala 159:19]
                io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 175:34]
                io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 175:34]
                io.outCtrlSignals[2] <= ctrlSimple[0] @[VectorDiv.scala 178:32]
                io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 182:25]
                io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 182:25]
                io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 182:25]
                io.valid[3] <= UInt<1>("h0") @[VectorDiv.scala 185:25]
                io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 185:25]
                io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 185:25]
              else :
                node _T_42 = eq(UInt<2>("h3"), num) @[VectorDiv.scala 159:19]
                when _T_42 : @[VectorDiv.scala 159:19]
                  io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 190:34]
                  io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 190:34]
                  io.outCtrlSignals[2] <= ctrlComplex[2] @[VectorDiv.scala 190:34]
                  io.outCtrlSignals[3] <= ctrlSimple[0] @[VectorDiv.scala 193:32]
                  io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 196:25]
                  io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 196:25]
                  io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 196:25]
                  io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 196:25]
                  io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 199:25]
                  io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 199:25]
                else :
                  node _T_43 = eq(UInt<3>("h4"), num) @[VectorDiv.scala 159:19]
                  when _T_43 : @[VectorDiv.scala 159:19]
                    io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 204:34]
                    io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 204:34]
                    io.outCtrlSignals[2] <= ctrlComplex[2] @[VectorDiv.scala 204:34]
                    io.outCtrlSignals[3] <= ctrlComplex[3] @[VectorDiv.scala 204:34]
                    io.outCtrlSignals[4] <= ctrlSimple[0] @[VectorDiv.scala 207:32]
                    io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 211:25]
                    io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 211:25]
                    io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 211:25]
                    io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 211:25]
                    io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 211:25]
                    io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 214:25]
                  else :
                    node _T_44 = eq(UInt<3>("h5"), num) @[VectorDiv.scala 159:19]
                    when _T_44 : @[VectorDiv.scala 159:19]
                      io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 219:34]
                      io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 219:34]
                      io.outCtrlSignals[2] <= ctrlComplex[2] @[VectorDiv.scala 219:34]
                      io.outCtrlSignals[3] <= ctrlComplex[3] @[VectorDiv.scala 219:34]
                      io.outCtrlSignals[4] <= ctrlComplex[4] @[VectorDiv.scala 219:34]
                      io.outCtrlSignals[5] <= ctrlSimple[0] @[VectorDiv.scala 222:32]
                      io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 225:25]
                      io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 225:25]
                      io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 225:25]
                      io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 225:25]
                      io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 225:25]
                      io.valid[5] <= UInt<1>("h1") @[VectorDiv.scala 225:25]
          else :
            node _T_45 = eq(UInt<4>("h8"), offset) @[VectorDiv.scala 54:18]
            when _T_45 : @[VectorDiv.scala 54:18]
              node _T_46 = eq(UInt<1>("h1"), num) @[VectorDiv.scala 235:19]
              when _T_46 : @[VectorDiv.scala 235:19]
                io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 237:32]
                io.outCtrlSignals[1] <= ctrlSimple[0] @[VectorDiv.scala 240:38]
                io.outCtrlSignals[2] <= ctrlSimple[1] @[VectorDiv.scala 240:38]
                io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 245:25]
                io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 245:25]
                io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 245:25]
                io.valid[3] <= UInt<1>("h0") @[VectorDiv.scala 248:25]
                io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 248:25]
                io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 248:25]
              else :
                node _T_47 = eq(UInt<2>("h2"), num) @[VectorDiv.scala 235:19]
                when _T_47 : @[VectorDiv.scala 235:19]
                  io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 253:34]
                  io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 253:34]
                  io.outCtrlSignals[2] <= ctrlSimple[0] @[VectorDiv.scala 257:38]
                  io.outCtrlSignals[3] <= ctrlSimple[1] @[VectorDiv.scala 257:38]
                  io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 262:25]
                  io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 262:25]
                  io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 262:25]
                  io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 262:25]
                  io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 265:25]
                  io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 265:25]
                else :
                  node _T_48 = eq(UInt<2>("h3"), num) @[VectorDiv.scala 235:19]
                  when _T_48 : @[VectorDiv.scala 235:19]
                    io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 270:34]
                    io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 270:34]
                    io.outCtrlSignals[2] <= ctrlComplex[2] @[VectorDiv.scala 270:34]
                    io.outCtrlSignals[3] <= ctrlSimple[0] @[VectorDiv.scala 274:38]
                    io.outCtrlSignals[4] <= ctrlSimple[1] @[VectorDiv.scala 274:38]
                    io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 279:25]
                    io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 279:25]
                    io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 279:25]
                    io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 279:25]
                    io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 279:25]
                    io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 282:25]
                  else :
                    node _T_49 = eq(UInt<3>("h4"), num) @[VectorDiv.scala 235:19]
                    when _T_49 : @[VectorDiv.scala 235:19]
                      io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 287:34]
                      io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 287:34]
                      io.outCtrlSignals[2] <= ctrlComplex[2] @[VectorDiv.scala 287:34]
                      io.outCtrlSignals[3] <= ctrlComplex[3] @[VectorDiv.scala 287:34]
                      io.outCtrlSignals[4] <= ctrlSimple[0] @[VectorDiv.scala 291:38]
                      io.outCtrlSignals[5] <= ctrlSimple[1] @[VectorDiv.scala 291:38]
                      io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 295:25]
                      io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 295:25]
                      io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 295:25]
                      io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 295:25]
                      io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 295:25]
                      io.valid[5] <= UInt<1>("h1") @[VectorDiv.scala 295:25]
            else :
              node _T_50 = eq(UInt<5>("h10"), offset) @[VectorDiv.scala 54:18]
              when _T_50 : @[VectorDiv.scala 54:18]
                node _T_51 = eq(UInt<1>("h1"), num) @[VectorDiv.scala 305:19]
                when _T_51 : @[VectorDiv.scala 305:19]
                  io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 307:32]
                  io.outCtrlSignals[1] <= ctrlSimple[0] @[VectorDiv.scala 310:38]
                  io.outCtrlSignals[2] <= ctrlSimple[1] @[VectorDiv.scala 310:38]
                  io.outCtrlSignals[3] <= ctrlSimple[2] @[VectorDiv.scala 310:38]
                  io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 315:25]
                  io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 315:25]
                  io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 315:25]
                  io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 315:25]
                  io.valid[4] <= UInt<1>("h0") @[VectorDiv.scala 318:25]
                  io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 318:25]
                else :
                  node _T_52 = eq(UInt<2>("h2"), num) @[VectorDiv.scala 305:19]
                  when _T_52 : @[VectorDiv.scala 305:19]
                    io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 323:34]
                    io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 323:34]
                    io.outCtrlSignals[2] <= ctrlSimple[0] @[VectorDiv.scala 327:38]
                    io.outCtrlSignals[3] <= ctrlSimple[1] @[VectorDiv.scala 327:38]
                    io.outCtrlSignals[4] <= ctrlSimple[2] @[VectorDiv.scala 327:38]
                    io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 332:25]
                    io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 332:25]
                    io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 332:25]
                    io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 332:25]
                    io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 332:25]
                    io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 335:25]
                  else :
                    node _T_53 = eq(UInt<2>("h3"), num) @[VectorDiv.scala 305:19]
                    when _T_53 : @[VectorDiv.scala 305:19]
                      io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 340:34]
                      io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 340:34]
                      io.outCtrlSignals[2] <= ctrlComplex[2] @[VectorDiv.scala 340:34]
                      io.outCtrlSignals[3] <= ctrlSimple[0] @[VectorDiv.scala 344:38]
                      io.outCtrlSignals[4] <= ctrlSimple[1] @[VectorDiv.scala 344:38]
                      io.outCtrlSignals[5] <= ctrlSimple[2] @[VectorDiv.scala 344:38]
                      io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 349:25]
                      io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 349:25]
                      io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 349:25]
                      io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 349:25]
                      io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 349:25]
                      io.valid[5] <= UInt<1>("h1") @[VectorDiv.scala 349:25]
              else :
                node _T_54 = eq(UInt<6>("h20"), offset) @[VectorDiv.scala 54:18]
                when _T_54 : @[VectorDiv.scala 54:18]
                  node _T_55 = eq(UInt<1>("h1"), num) @[VectorDiv.scala 359:19]
                  when _T_55 : @[VectorDiv.scala 359:19]
                    io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 361:32]
                    io.outCtrlSignals[1] <= ctrlSimple[0] @[VectorDiv.scala 364:38]
                    io.outCtrlSignals[2] <= ctrlSimple[1] @[VectorDiv.scala 364:38]
                    io.outCtrlSignals[3] <= ctrlSimple[2] @[VectorDiv.scala 364:38]
                    io.outCtrlSignals[4] <= ctrlSimple[3] @[VectorDiv.scala 364:38]
                    io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 369:25]
                    io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 369:25]
                    io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 369:25]
                    io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 369:25]
                    io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 369:25]
                    io.valid[5] <= UInt<1>("h0") @[VectorDiv.scala 372:25]
                  else :
                    node _T_56 = eq(UInt<2>("h2"), num) @[VectorDiv.scala 359:19]
                    when _T_56 : @[VectorDiv.scala 359:19]
                      io.outCtrlSignals[0] <= ctrlComplex[0] @[VectorDiv.scala 377:34]
                      io.outCtrlSignals[1] <= ctrlComplex[1] @[VectorDiv.scala 377:34]
                      io.outCtrlSignals[2] <= ctrlSimple[0] @[VectorDiv.scala 381:38]
                      io.outCtrlSignals[3] <= ctrlSimple[1] @[VectorDiv.scala 381:38]
                      io.outCtrlSignals[4] <= ctrlSimple[2] @[VectorDiv.scala 381:38]
                      io.outCtrlSignals[5] <= ctrlSimple[3] @[VectorDiv.scala 381:38]
                      io.valid[0] <= UInt<1>("h1") @[VectorDiv.scala 386:25]
                      io.valid[1] <= UInt<1>("h1") @[VectorDiv.scala 386:25]
                      io.valid[2] <= UInt<1>("h1") @[VectorDiv.scala 386:25]
                      io.valid[3] <= UInt<1>("h1") @[VectorDiv.scala 386:25]
                      io.valid[4] <= UInt<1>("h1") @[VectorDiv.scala 386:25]
                      io.valid[5] <= UInt<1>("h1") @[VectorDiv.scala 386:25]

